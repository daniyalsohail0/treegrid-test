{"version":3,"file":"ej2-drawings.min.js","sources":["../../src/drawing/primitives/matrix.js","../../src/drawing/utility/dom-util.js","../../src/drawing/utility/base-util.js","../../src/drawing/utility/path-util.js","../../src/drawing/rendering/canvas-renderer.js","../../src/drawing/rendering/svg-renderer.js","../../src/drawing/utility/diagram-util.js","../../src/drawing/core/appearance.js","../../src/drawing/enum/enum.js","../../src/drawing/primitives/size.js","../../src/drawing/primitives/rect.js","../../src/drawing/core/elements/drawing-element.js","../../src/drawing/core/containers/container.js","../../src/drawing/core/elements/text-element.js","../../src/drawing/core/containers/canvas.js","../../src/drawing/core/elements/image-element.js","../../src/drawing/core/elements/path-element.js","../../src/drawing/primitives/point.js","../../src/drawing/rendering/renderer.js"],"sourcesContent":["/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    var path = 'pathTable';\n    if (!window[path]) {\n        window[path] = {};\n    }\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        //let bounds: SVGRect = element.getBBox();\n        var bounds = void 0;\n        if (window[path][data]) {\n            bounds = window[path][data];\n        }\n        else {\n            window[path][data] = bounds = element.getBBox();\n        }\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity,\n        visible: element.visible, id: element.id,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    // if (txtValue.indexOf('\\n') > -1) {\n                    //     txtValue = txtValue.replace('\\n', '');\n                    // }\n                    var width = bBoxText(txtValue, text);\n                    if ((Math.ceil(width) + 2 >= text.width && txtValue.length > 0) || (txtValue.indexOf('\\n') > -1)) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n    var elementcoll;\n    if (diagramElement) {\n        elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n        adornerLayerSvg = elementcoll[0];\n    }\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId, index);\n    if (adornerSvg) {\n        adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    }\n    return adornerLayer;\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getChildNode } from './dom-util';\nimport { Size } from '../primitives/size';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n","/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        ctx.fillStyle = style.fill;\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    //     child.text = overFlow(child.text, options);\n                    // }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        ctx.globalAlpha = alignOptions.opacity;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            if (image.complete) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n            else {\n                image.onload = function () {\n                    ctx.drawImage(image, x, y, width, height);\n                };\n            }\n        }\n        ctx.closePath();\n    };\n    // text utility\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n    for (var i = 0; i < drawingObjects.length; i++) {\n        renderer.renderElement(drawingObjects[i], canvas, undefined);\n    }\n}\n","import { Size } from './../primitives/size';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { processPathData, pathSegmentCollection } from '../utility/path-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            fill = style.fill;\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvg(id, width, height) {\n    var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n    return svgObj;\n}\nexport function getParentSvg(element, targetElement, canvas) {\n    if (element && element.id) {\n        if (targetElement && targetElement === 'selector') {\n            return this.pdfViewer.adornerSvgLayer;\n        }\n    }\n    return canvas;\n}\n","import { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { rotatePoint } from './base-util';\n/**\n * Implements the drawing functionalities\n */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\n/** @private */\nexport function findElementUnderMouse(obj, position, padding) {\n    return findTargetElement(obj.wrapper, position, padding);\n}\n/** @private */\nexport function findTargetElement(container, position, padding) {\n    for (var i = container.children.length - 1; i >= 0; i--) {\n        var element = container.children[i];\n        if (element && element.bounds.containsPoint(position, 0)) {\n            if (element instanceof Container) {\n                var target = this.findTargetElement(element, position);\n                if (target) {\n                    return target;\n                }\n            }\n            if (element.bounds.containsPoint(position, 0)) {\n                return element;\n            }\n        }\n    }\n    if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n        return container;\n    }\n    return null;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            //    scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var RotateTransform;\n(function (RotateTransform) {\n    /** Self - Sets the transform type as Self */\n    RotateTransform[RotateTransform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    RotateTransform[RotateTransform[\"Parent\"] = 2] = \"Parent\";\n})(RotateTransform || (RotateTransform = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    // /**   @private  */\n    // public isEmpty(): boolean {\n    //     return this.height === 0 && this.width === 0;\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    Rect.prototype.intersection = function (rect) {\n        if (this.intersects(rect)) {\n            var left = Math.max(this.left, rect.left);\n            var top_1 = Math.max(this.top, rect.top);\n            var right = Math.min(this.right, rect.right);\n            var bottom = Math.min(this.bottom, rect.bottom);\n            return new Rect(left, top_1, right - left, bottom - top_1);\n        }\n        return Rect.empty;\n    };\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    // public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    // }\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    Rect.prototype.toPoints = function () {\n        var points = [];\n        points.push(this.topLeft);\n        points.push(this.topRight);\n        points.push(this.bottomLeft);\n        points.push(this.bottomRight);\n        return points;\n    };\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.prototype.scale = function (scaleX, scaleY) {\n        this.width *= scaleX;\n        this.height *= scaleY;\n    };\n    Rect.prototype.offset = function (offsetX, offsetY) {\n        this.x += offsetX;\n        this.y += offsetY;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","import { RotateTransform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DrawingElement = /** @class */ (function () {\n    function DrawingElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        this.rotateValue = { x: 0, y: 0, angle: 0 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        /** @private */\n        this.transform = RotateTransform.Self | RotateTransform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        /** @private */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DrawingElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DrawingElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DrawingElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DrawingElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DrawingElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DrawingElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DrawingElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DrawingElement;\n}());\nexport { DrawingElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DrawingElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 1,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DrawingElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y;\n            x = this.offsetX - desiredSize.width * this.pivot.x;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & RotateTransform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    if (child.rotateValue) {\n                        var rotateValue = {\n                            x: this.offsetX + (child.rotateValue.x || 0),\n                            y: this.offsetY + (child.rotateValue.y || 0)\n                        };\n                        var centerPoint = { x: this.offsetX, y: this.offsetY };\n                        var angle = child.rotateValue.angle | 0;\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n                        center = transformPointByMatrix(matrix, rotateValue);\n                    }\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if ((child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DrawingElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DrawingElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","import { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { ImageElement } from '../core/elements/image-element';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DrawingRenderer = /** @class */ (function () {\n    function DrawingRenderer(name, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        // private svgRenderer: SvgRenderer;\n        /** @private */\n        this.isSvgMode = true;\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.isSvgMode = isSvgMode;\n        this.renderer = new CanvasRenderer();\n        //  this.svgRenderer = new SvgRenderer();\n    }\n    // /** @private */\n    // public setLayers(): void {\n    //     this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0] as SVGSVGElement;\n    // }\n    /**   @private  */\n    DrawingRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttrib                                                                           utes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.id;\n        if (!this.isSvgMode) {\n            options.x = options.x;\n            options.y = options.y;\n        }\n        this.renderer.drawPath(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options);\n        this.renderer.drawText(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        transform = { tx: 0, ty: 0, scale: 1 };\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = parentSvg;\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n            }\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.id;\n        this.renderer.drawRectangle(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity,\n            visible: element.visible, id: element.id, gradient: element.style.gradient,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    return DrawingRenderer;\n}());\nexport { DrawingRenderer };\n"],"names":["identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","x","y","Math","round","transformPointsByMatrix","points","transformedPoints","_i","points_1","length","push","rotateMatrix","angle","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getChildNode","node","child","collection","Browser","info","name","i","childNodes","nodeType","children","translatePoints","element","translatedPts","pt1","actualSize","width","pivot","height","rotateAngle","parentTransform","measurePath","data","path","window","style","visibility","setAttribute","bounds","getBBox","svgBounds","Rect","getTextOptions","maxWidth","options","fill","stroke","strokeColor","pivotX","pivotY","strokeWidth","dashArray","strokeDashArray","opacity","visible","id","fontSize","fontFamily","textOverflow","textDecoration","doWrap","whiteSpace","whiteSpaceToString","textWrapping","content","breakWord","wordBreakToString","textAlign","textAlignToString","color","italic","bold","wrapSvgText","text","textValue","txtValue","bounds1","k","bBoxText","dy","ceil","indexOf","wordWrapping","words","newText","existingWidth","existingText","j","wrap","eachLine","split","floor","wrapSvgTextAlign","txtWidth","wrapBounds","min","max","measureText","Size","getDiagramElement","elementId","contentId","document","getElementById","querySelector","createHtmlElement","elementType","attribute","createElement","setAttributeHtml","attributes","keys","Object","getAdornerLayerSvg","diagramId","index","adornerLayerSvg","diagramElement","getElementsByClassName","getSelectorElement","adornerLayer","adornerSvg","createMeasureElements","usageCount","divElement","appendChild","imageElement","svg","createElementNS","createTextNode","tSpan","setAttributeNS","body","measureImage","source","contentSize","getBoundingClientRect","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","substring","cornersPointsBeforeRotation","ele","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","toBounds","rotateSize","size","minX","minY","maxX","maxY","getBounds","corners","middleLeft","topCenter","bottomCenter","middleRight","center","value","state","textContent","bBox","middleElement","rotatePoint","getOffset","obj","desiredSize","processPathData","arrayCollection","parsePathData","ob","char","toLowerCase","command","x1","y1","x2","y2","r1","r2","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","Number","getRectanglePath","cornerRadius","point2","next","corner","pathSegmentCollection","x0","y0","segments","seg","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","refreshDiagramElements","canvas","drawingObjects","renderer","renderElement","setAttributeSvg","createSvgElement","createSvg","svgObj","getParentSvg","targetElement","this","pdfViewer","adornerSvgLayer","findNearestPoint","reference","start","end","shortestPoint","Point","findLength","angleBWStAndEnd","findAngle","angleBWStAndRef","r","vaAngle","PI","findElementUnderMouse","position","padding","findTargetElement","wrapper","container","containsPoint","Container","target","intersect3","lineUtil1","lineUtil2","l1","l2","d","na","nb","enabled","intersectPt","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","getPoints","line","getBezierDirection","src","tar","abs","updateStyle","changedObject","textElement","_a","StrokeStyle","TextElement","refreshTextElement","scaleElement","sw","sh","refObject","refPoint","newPosition","contains","mousePosition","getPoint","w","h","cornerPoint","trans","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","_super","apply","Property","ChildProperty","Stop","getClassName","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","RotateTransform","ElementAction","ConnectorConstraints","ThumbsConstraints","SelectorConstraints","NoOfSegments","clone","MAX_VALUE","get","enumerable","configurable","equals","rect1","rect2","uniteRect","rect","NaN","unitePoint","intersection","intersects","top_1","empty","Inflate","containsRect","toPoints","scale","offset","MIN_VALUE","DrawingElement","rotateValue","isDirt","minHeight","minWidth","maxHeight","horizontalAlignment","verticalAlignment","margin","relativeMode","transform","Self","Parent","preventContainer","staticSize","isRectElement","isCalculateDesiredSize","elementActions","None","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","mode","getAbsolutePosition","set","measure","availableSize","validateDesiredSize","arrange","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","findChildOffsetFromCenter","childSize","call","canMeasure","canConsiderBounds","textNodes","textWrapBounds","Canvas","leftMargin","topMargin","outerBounds","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","centerPoint","parentSize","ImageElement","imageSource","imageScale","imageAlign","stretch","PathElement","pathData","absolutePath","canMeasurePath","absoluteBounds","updatePath","newPathString","point1","isEmptyPoint","e","sqrt","pow","atan2","distancePoints","pt2","getLengthFromListOfPoints","adjustPoint","isStart","direction","CanvasRenderer","getContext","setStyle","ctx","strokeStyle","lineWidth","globalAlpha","parseDashArray","setLineDash","fillStyle","rotateContext","translate","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","save","beginPath","fillRect","closePath","restore","renderPath","length_1","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","isNaN","cpp","centp","a1","a","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","m","acos","getMeetOffset","arg","res","dest","getSliceOffset","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","xalign","substr","yalign","sWidth","sHeight","dWidth","dHeight","canvas1","toString","drawImage","srcRatio","destRatio","complete","onload","loadImage","Image","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","labelX","labelY","pointx","pointy","DrawingRenderer","isSvgMode","htmlLayer","createParent","indexValue","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderRect","getBaseAttributes","imageWidth","imageHeight","sourceWidth","sourceHeight","contentWidth","contentHeight","widthRatio","heightRatio","ratio","group","tx","ty","gradient","SvgRenderer","onlyRect","isSelector","ariaLabel","attr","aria-label","class","setSvgStyle","updateSelectionRegion","gElement","parentNode","createGElement","drawCircle","enableSelector","circle","classval","cx","cy","radius","display","canApplyStyle","svgLabelAlign","wrapBound","pos","pointX","pointY","drawLine","startPoint","endPoint","stroke-width","shadowElement","removeChild"],"mappings":"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"}