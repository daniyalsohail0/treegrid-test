{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            var taskData = 'taskData';\n                                            editedData.taskData[keys[j]]\n                                                = editedData[keys[j]] = control.grid.currentViewData[i][keys[j]]\n                                                    = control.grid.currentViewData[i][taskData][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) && (filterQuery.length || searchQuery.length))) {\n            var qry_1 = new Query();\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = new Query();\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery_1);\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery_1);\n            }\n            var fltrQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry_1.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry_1);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery_1)) {\n                    gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_2 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_2)) {\n                gridQuery_2 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_2.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource) : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.parent.grid.selectedRowIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!this[initialRowTop]) {\n            this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","hasOwnProperty","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","isRowDDEnabled","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","field","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","qry_1","gridQuery_1","fltrQuery","srchQuery","filteredData","gridQuery_2","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger"],"mappings":"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"}