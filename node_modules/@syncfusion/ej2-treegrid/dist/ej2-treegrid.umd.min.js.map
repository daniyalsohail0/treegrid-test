{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            var taskData = 'taskData';\n                                            editedData.taskData[keys[j]]\n                                                = editedData[keys[j]] = control.grid.currentViewData[i][keys[j]]\n                                                    = control.grid.currentViewData[i][taskData][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) && (filterQuery.length || searchQuery.length))) {\n            var qry_1 = new Query();\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = new Query();\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery_1);\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery_1);\n            }\n            var fltrQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry_1.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry_1);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery_1)) {\n                    gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_2 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_2)) {\n                gridQuery_2 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_2.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource) : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.parent.grid.selectedRowIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!this[initialRowTop]) {\n            this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","hasOwnProperty","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","isRowDDEnabled","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","field","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","qry_1","gridQuery_1","fltrQuery","srchQuery","filteredData","gridQuery_2","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"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,GACrCE,IACIc,WAAS,aACVkc,EAASld,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACVkc,EAASld,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACVkc,EAASld,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACVkc,EAASld,UAAW,qBAAiB,GACxCE,IACIm4B,aAAYj3B,IACb8b,EAASld,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACVkc,EAASld,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACVkc,EAASld,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVkc,EAASld,UAAW,0BAAsB,GAC7CE,IACIm4B,aAAYjd,KACb8B,EAASld,UAAW,oBAAgB,GACvCE,IACIm4B,aAAYC,oBACbpb,EAASld,UAAW,uBAAmB,GAC1CE,IACIc,cACDkc,EAASld,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVkc,EAASld,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACVkc,EAASld,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACVkc,EAASld,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACVkc,EAASld,UAAW,yBAAqB,GAC5CE,IACIm4B,aAAYpb,KACbC,EAASld,UAAW,oBAAgB,GACvCE,IACIiB,gBAAe2b,KAChBI,EAASld,UAAW,kBAAc,GACrCE,IACIm4B,aAAYtb,KACbG,EAASld,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACVkc,EAASld,UAAW,sBAAkB,GACzCE,IACIc,cACDkc,EAASld,UAAW,sBAAkB,GACzCE,IACIm4B,aAAYn3B,IACbgc,EAASld,UAAW,sBAAkB,GACzCE,IACIm4B,aAAY9oB,KACb2N,EAASld,UAAW,sBAAkB,GACzCE,IACIc,cACDkc,EAASld,UAAW,eAAW,GAClCE,IACIc,cACDkc,EAASld,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACVkc,EAASld,UAAW,iBAAa,GACpCE,IACIc,cACDkc,EAASld,UAAW,wBAAoB,GAC3CE,IACIc,cACDkc,EAASld,UAAW,uBAAmB,GAC1CE,IACIc,cACDkc,EAASld,UAAW,mBAAe,GACtCE,IACIc,WAAS,WACVkc,EAASld,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACVkc,EAASld,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACVkc,EAASld,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACVkc,EAASld,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVkc,EAASld,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACVkc,EAASld,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACVkc,EAASld,UAAW,2BAAuB,GAC9CE,IACIc,WAAS,SACVkc,EAASld,UAAW,cAAU,GACjCE,IACIc,WAAS,SACVkc,EAASld,UAAW,aAAS,GAChCE,IACIc,YAAS,IACVkc,EAASld,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACVkc,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,eAAW,GAClCE,IACIq4B,WACDrb,EAASld,UAAW,YAAQ,GAC/BE,IACIq4B,WACDrb,EAASld,UAAW,iBAAa,GACpCE,IACIq4B,WACDrb,EAASld,UAAW,gBAAY,GACnCE,IACIq4B,WACDrb,EAASld,UAAW,kBAAc,GACrCE,IACIq4B,WACDrb,EAASld,UAAW,iBAAa,GACpCE,IACIq4B,WACDrb,EAASld,UAAW,gBAAY,GACnCE,IACIq4B,WACDrb,EAASld,UAAW,iBAAa,GACpCE,IACIq4B,WACDrb,EAASld,UAAW,mBAAe,GACtCE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,iBAAa,GACpCE,IACIq4B,WACDrb,EAASld,UAAW,gBAAY,GACnCE,IACIq4B,WACDrb,EAASld,UAAW,mBAAe,GACtCE,IACIq4B,WACDrb,EAASld,UAAW,mBAAe,GACtCE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,yBAAqB,GAC5CE,IACIq4B,WACDrb,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,gBAAY,GACnCE,IACIq4B,WACDrb,EAASld,UAAW,qBAAiB,GACxCE,IACIq4B,WACDrb,EAASld,UAAW,iBAAa,GACpCE,IACIq4B,WACDrb,EAASld,UAAW,yBAAqB,GAC5CE,IACIq4B,WACDrb,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,yBAAqB,GAC5CE,IACIq4B,WACDrb,EAASld,UAAW,oBAAgB,GACvCE,IACIq4B,WACDrb,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVkc,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,oBAAgB,GACvCE,IACIq4B,WACDrb,EAASld,UAAW,mBAAe,GACtCE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,qBAAiB,GACxCE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,qBAAiB,GACxCE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,oBAAgB,GACvCE,IACIq4B,WACDrb,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,mBAAe,GACtCE,IACIq4B,WACDrb,EAASld,UAAW,gBAAY,GACnCE,IACIq4B,WACDrb,EAASld,UAAW,kBAAc,GACrCE,IACIq4B,WACDrb,EAASld,UAAW,uBAAmB,GAC1CE,IACIq4B,WACDrb,EAASld,UAAW,kBAAc,GACrCE,IACIq4B,WACDrb,EAASld,UAAW,kBAAc,GACrCE,IACIq4B,WACDrb,EAASld,UAAW,sBAAkB,GACzCE,IACIq4B,WACDrb,EAASld,UAAW,qBAAiB,GACxCE,IACIq4B,WACDrb,EAASld,UAA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"}