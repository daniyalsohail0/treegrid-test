{"version":3,"file":"ej2-progressbar.min.js","sources":["../../src/progressbar/utils/helper.js","../../src/progressbar/utils/theme.js","../../src/progressbar/model/progress-base.js","../../src/progressbar/model/constant.js","../../src/progressbar/model/annotation.js","../../src/progressbar/utils/progress-animation.js","../../src/progressbar/model/progress-annotation.js","../../src/progressbar/types/segment-progress.js","../../src/progressbar/types/linear-progress.js","../../src/progressbar/types/circular-progress.js","../../src/progressbar/progressbar.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar Pos = /** @class */ (function () {\n    function Pos(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Pos;\n}());\nexport { Pos };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    document.body.appendChild(createElement('text', { id: 'chartmeasuretext' }));\n    element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    remove(element);\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, fontSize, fontStyle, fontFamily, fontWeight, textAnchor, fill, x, y, width, height) {\n        this.id = id;\n        this['font-size'] = fontSize;\n        this['font-style'] = fontStyle;\n        this['font-family'] = fontFamily;\n        this['font-weight'] = fontWeight;\n        this['text-anchor'] = textAnchor;\n        this.fill = fill;\n        this.x = x;\n        this.y = y;\n        this.width = width ? width : 0;\n        this.height = height ? height : 0;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/** calculate the start and end point of circle */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/** calculate the path of the circle */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, pieView) {\n    var start = degreeToLocation(x, y, radius, startAngle);\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (pieView) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y + ' ' + 'Z';\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/** @private */\n// tslint:disable-next-line\nexport function setAttributes(options, element) {\n    var keys = Object.keys(options);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], options[keys[i]]);\n    }\n    return element;\n}\n/**\n * Animation Effect Calculation\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","/** @private */\n// tslint:disable-next-line:max-func-body-length\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Roboto',\n                linearFontSize: '12',\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Roboto',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#4caf50',\n                danger: '#ff6652',\n                warning: '#ff9800',\n                info: '#03a9f4',\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                success: '#48b14c',\n                danger: '#d44f4f',\n                warning: '#fac168',\n                info: '#2aaac0',\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Helvetica',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                success: '#28a745',\n                danger: '#dc3545',\n                warning: '#ffc107',\n                info: '#17a2b8',\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                fontColor: '#FFFFFF',\n                linearFontFamily: 'Segoe UI',\n                linearFontSize: '12',\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#2bc700',\n                danger: '#ff6161',\n                warning: '#ff7d1a',\n                info: '#66b0ff',\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                fontColor: '#333333',\n                linearFontFamily: 'Segoe UI',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#166600',\n                danger: '#b30900',\n                warning: '#944000',\n                info: '#0056b3',\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in progressbar\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Far')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"text\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n/**\n * RangeColor\n */\nvar RangeColor = /** @class */ (function (_super) {\n    __extends(RangeColor, _super);\n    function RangeColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], RangeColor.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"end\", void 0);\n    return RangeColor;\n}(ChildProperty));\nexport { RangeColor };\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n/**\n * mouseClick event\n */\nexport var mouseClick = 'mouseClick';\n/**\n * mouseDown event\n */\nexport var mouseDown = 'mouseDown';\n/**\n * mouseUp event\n */\nexport var mouseUp = 'mouseUp';\n/**\n * mouseMove event\n */\nexport var mouseMove = 'mouseMove';\n/**\n * mouseLeave event\n */\nexport var mouseLeave = 'mouseLeave';\n/**\n * svgLink\n */\nexport var svgLink = 'http://www.w3.org/2000/svg';\n/**\n * gradient type\n */\nexport var gradientType = 'linearGradient';\n/**\n * stop element\n */\nexport var stopElement = 'stop';\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for progress annotation\n     * @param control\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var annotationElement;\n        var location;\n        location = new ProgressLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n            // tslint:disable-next-line:no-any\n            if (this.control.isReact) {\n                this.control.clearTemplate();\n            }\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n            // tslint:disable-next-line:no-any\n            if (this.control.isReact) {\n                this.control.renderReactTemplates();\n            }\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","import { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius, completeAngle } from '../model/constant';\n/**\n * Animation for progress bar\n */\nvar ProgressAnimation = /** @class */ (function () {\n    function ProgressAnimation() {\n    }\n    /** Linear Animation */\n    ProgressAnimation.prototype.doLinearAnimation = function (element, progress, delay, previousWidth, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        var width = linearPath.getAttribute('width');\n        var x = linearPath.getAttribute('x');\n        var opacityValue = 0;\n        var value = 0;\n        var start = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? previousWidth : parseInt(x, 10);\n        var end = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? parseInt(width, 10) - start :\n            parseInt(width, 10) - previousWidth;\n        var rtlX = parseInt(x, 10) - end;\n        linearPath.style.visibility = 'hidden';\n        animation.animate(linearPath, {\n            duration: duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), parseInt(x, 10), parseInt(width, 10), true);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, true);\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), 0, parseInt(width, 10), false);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                    }\n                }\n            },\n            end: function (model) {\n                progress.cancelResize = false;\n                linearPath.style.visibility = '';\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (progress.isActive) {\n                        linearPath.setAttribute('x', x.toString());\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                    else {\n                        linearPath.setAttribute('x', rtlX.toString());\n                    }\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                    if (progress.isActive) {\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /** Linear Indeterminate */\n    ProgressAnimation.prototype.doLinearIndeterminate = function (element, progressWidth, thickness, progress, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var x = linearPath.getAttribute('x');\n        var width = linearPath.getAttribute('width');\n        var value = 0;\n        var start = (width) ? -(parseInt(width, 10)) : -progressWidth;\n        var end = (progress.progressRect.x + progress.progressRect.width) + ((width) ? (parseInt(width, 10)) : progressWidth);\n        var duration = (!progress.enableProgressSegments) ? 2500 : 3500;\n        animation.animate(clipPath, {\n            duration: duration,\n            delay: 0,\n            progress: function (args) {\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    value = effect(args.timeStamp, parseInt(x, 10) || progress.progressRect.x + progressWidth, end, args.duration, true);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n                else {\n                    value = effect(args.timeStamp, start, end, args.duration, false);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n            },\n            end: function () {\n                if (progress.enableRtl && !progress.enableProgressSegments && !(progress.cornerRadius === 'Round4px')) {\n                    linearPath.setAttribute('x', x.toString());\n                }\n                else if (!progress.enableProgressSegments) {\n                    linearPath.setAttribute('x', start.toString());\n                }\n                if (!progress.destroyIndeterminate) {\n                    _this.doLinearIndeterminate(element, progressWidth, thickness, progress, clipPath);\n                }\n            }\n        });\n    };\n    /** Linear striped */\n    ProgressAnimation.prototype.doStripedAnimation = function (element, progress, value, delay) {\n        var _this = this;\n        var animation = new Animation({});\n        var point = 1000 / progress.animation.duration;\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: progress.animation.delay,\n            progress: function () {\n                value += (progress.enableRtl) ? -point : point;\n                element.setAttribute('gradientTransform', 'translate(' + value + ') rotate(-45)');\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doStripedAnimation(element, progress, value, false);\n                }\n            }\n        });\n    };\n    /** Circular animation */\n    ProgressAnimation.prototype.doCircularAnimation = function (x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var circularPath = element;\n        var start = progress.startAngle;\n        var pathRadius = radius + (thickness / 2);\n        var end = 0;\n        var opacityValue = 0;\n        var startPos;\n        var endPos;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        start += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n        totalEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            (lineCapRadius / 2) * thickness : 0;\n        progressEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? -(lineCapRadius / 2) * thickness : (lineCapRadius / 2) * thickness) : 0;\n        startPos = (!isNullOrUndefined(startValue)) ? startValue : start;\n        endPos = (!isNullOrUndefined(startValue)) ? totalEnd - previousTotal : totalEnd;\n        circularPath.setAttribute('visibility', 'Hidden');\n        animation.animate(circularPath, {\n            duration: duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (args.timeStamp >= args.delay) {\n                    circularPath.setAttribute('visibility', 'visible');\n                    if (progress.isActive) {\n                        end = _this.activeAnimate((args.timeStamp / args.duration), startPos, endPos, progress.enableRtl);\n                        opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                        active.setAttribute('opacity', opacityValue.toString());\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                    else {\n                        end = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                }\n            },\n            end: function (model) {\n                progress.cancelResize = false;\n                circularPath.setAttribute('visibility', '');\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, progressEnd, progress.enableRtl, true));\n                if (progress.isActive) {\n                    _this.doCircularAnimation(x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active);\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /** Circular indeterminate */\n    ProgressAnimation.prototype.doCircularIndeterminate = function (circularProgress, progress, start, end, x, y, radius, thickness, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var pathRadius = radius + ((!progress.enableProgressSegments) ? (thickness / 2) : 0);\n        var value = (!progress.enableProgressSegments) ? 3 : 2;\n        animation.animate(clipPath, {\n            progress: function () {\n                circularProgress.style.visibility = 'visible';\n                start += (progress.enableRtl) ? -value : value;\n                end += (progress.enableRtl) ? -value : value;\n                circularProgress.setAttribute('d', getPathArc(x, y, pathRadius, start % 360, end % 360, progress.enableRtl, !progress.enableProgressSegments));\n            },\n            end: function (model) {\n                if (!progress.destroyIndeterminate) {\n                    _this.doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius, thickness, clipPath);\n                }\n            }\n        });\n    };\n    /** To do the label animation for progress bar */\n    ProgressAnimation.prototype.doLabelAnimation = function (labelPath, start, end, progress, delay, textSize) {\n        var animation = new Animation({});\n        var label = new Animation({});\n        var startPos;\n        var endPos;\n        var text = labelPath.innerHTML;\n        var value = 0;\n        var xPos = 0;\n        var valueChanged = 0;\n        var percentage = 100;\n        var labelText = progress.labelStyle.text;\n        var labelPos = progress.labelStyle.textAlignment;\n        var posX = parseInt(labelPath.getAttribute('x'), 10);\n        labelPath.setAttribute('visibility', 'Hidden');\n        if (progress.type === 'Linear') {\n            startPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width) + (textSize / 2) :\n                progress.progressRect.x - (textSize / 2);\n            startPos = (startPos <= 0) ? 0 : startPos;\n            endPos = (progress.enableRtl) ? startPos - posX : posX - startPos;\n        }\n        animation.animate(labelPath, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        if (labelText === '') {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            valueChanged = parseInt(((value / progress.progressRect.width) * percentage).toString(), 10);\n                            labelPath.innerHTML = valueChanged.toString() + '%';\n                            if (labelPos === 'Far' || labelPos === 'Center') {\n                                xPos = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                                labelPath.setAttribute('x', xPos.toString());\n                            }\n                        }\n                    }\n                }\n                else if (progress.type === 'Circular') {\n                    if (labelText === '') {\n                        labelPath.setAttribute('visibility', 'visible');\n                        value = effect(args.timeStamp, start, end, args.duration, false);\n                        valueChanged = parseInt((((value - start) / progress.totalAngle) * percentage).toString(), 10);\n                        labelPath.innerHTML = valueChanged.toString() + '%';\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                if (labelText === '') {\n                    labelPath.innerHTML = text;\n                    labelPath.setAttribute('x', posX.toString());\n                }\n                else {\n                    label.animate(labelPath, {\n                        progress: function (args) {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, 0, 1, args.duration, false);\n                            labelPath.setAttribute('opacity', value.toString());\n                        },\n                        end: function () {\n                            labelPath.setAttribute('opacity', '1');\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /** To do the annotation animation for circular progress bar */\n    ProgressAnimation.prototype.doAnnotationAnimation = function (circularPath, progress, previousEnd, previousTotal) {\n        var animation = new Animation({});\n        var value = 0;\n        var percentage = 100;\n        var isAnnotation = progress.annotations.length > 0;\n        var annotatElementChanged;\n        var firstAnnotatElement;\n        var start = progress.startAngle;\n        var totalAngle = progress.totalAngle;\n        var totalEnd;\n        var annotateValueChanged;\n        var annotateValue;\n        var startValue;\n        var endValue;\n        if (isAnnotation && progress.progressAnnotationModule) {\n            firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n            if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n                if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                    annotatElementChanged = firstAnnotatElement.children[0];\n                }\n            }\n        }\n        totalEnd = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n        progress.annotateTotal = totalEnd =\n            (progress.argsData.value < progress.minimum || progress.argsData.value > progress.maximum) ? 0 : totalEnd;\n        progress.annotateEnd = start + totalEnd;\n        annotateValue = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        annotateValue = (progress.argsData.value < progress.minimum || progress.argsData.value > progress.maximum) ? 0 :\n            Math.round(annotateValue);\n        startValue = (!isNullOrUndefined(previousEnd)) ? previousEnd : start;\n        endValue = (!isNullOrUndefined(previousEnd)) ? totalEnd - previousTotal : totalEnd;\n        if (progress.argsData.value <= progress.minimum || progress.argsData.value > progress.maximum) {\n            annotatElementChanged.innerHTML = annotateValue + '%';\n        }\n        else {\n            animation.animate(circularPath, {\n                duration: progress.animation.duration,\n                delay: progress.animation.delay,\n                progress: function (args) {\n                    progress.cancelResize = true;\n                    if (isAnnotation && annotatElementChanged) {\n                        value = effect(args.timeStamp, startValue, endValue, args.duration, false);\n                        annotateValueChanged = parseInt((((Math.round(value) - start) / totalAngle) * percentage).toString(), 10);\n                        annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '0%';\n                    }\n                },\n                end: function (model) {\n                    progress.cancelResize = false;\n                    annotatElementChanged.innerHTML = annotateValue + '%';\n                }\n            });\n        }\n    };\n    ProgressAnimation.prototype.activeAnimate = function (t, start, end, enableRtl) {\n        var time = 1 - Math.pow(1 - t, 3);\n        var attrValue = start + ((!enableRtl) ? (time * end) : -(time * end));\n        return attrValue;\n    };\n    return ProgressAnimation;\n}());\nexport { ProgressAnimation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\nimport { ProgressAnimation } from '../utils/progress-animation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for ProgressBar annotation\n     * @private\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.animation = new ProgressAnimation();\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for ProgressBar\n     * @param element\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n        if (this.progress.animation.enable && !this.progress.isIndeterminate) {\n            this.animation.doAnnotationAnimation(this.progress.clipPath, this.progress);\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function (control) {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","import { lineCapRadius, completeAngle } from '../model/constant';\nimport { getPathArc, degreeToLocation } from '../utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * Progressbar Segment\n */\nvar Segment = /** @class */ (function () {\n    function Segment() {\n    }\n    /** To render the linear segment */\n    Segment.prototype.createLinearSegment = function (progress, id, width, opacity, thickness, progressWidth) {\n        var locX = (progress.enableRtl) ? ((progress.cornerRadius === 'Round') ?\n            (progress.progressRect.x + progress.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (progress.progressRect.x + progress.progressRect.width)) :\n            ((progress.cornerRadius === 'Round') ? (progress.progressRect.x + (lineCapRadius / 2) * thickness) : progress.progressRect.x);\n        var locY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var avlWidth = progressWidth / progress.segmentCount;\n        var avlSegWidth = (progressWidth - ((progress.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((progress.cornerRadius === 'Round') ? progress.segmentCount * (lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var gap = (progress.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (progress.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth, progress.enableRtl));\n            segmentPath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (progress.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.getLinearSegmentPath = function (x, y, width, enableRtl) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((enableRtl) ? -width : width)) + ' ' + y;\n    };\n    /** To render the circular segment */\n    Segment.prototype.createCircularSegment = function (progress, id, x, y, r, value, opacity, thickness, totalAngle, progressWidth) {\n        var start = progress.startAngle;\n        var end = this.widthToAngle(progress.minimum, progress.maximum, value, progress.totalAngle);\n        end -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var size = (progressWidth - ((progress.totalAngle === completeAngle) ? progress.segmentCount :\n            progress.segmentCount - 1) * (progress.gapWidth || progress.themeStyle.circularGapWidth));\n        size = (size -\n            ((progress.cornerRadius === 'Round') ?\n                (((progress.totalAngle === completeAngle) ?\n                    progress.segmentCount : progress.segmentCount - 1) * lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, progressWidth, (progressWidth / progress.segmentCount), totalAngle);\n        avlTolEnd -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var avlEnd = this.widthToAngle(0, progressWidth, size, totalAngle);\n        var gap = this.widthToAngle(0, progressWidth, (progress.gapWidth || progress.themeStyle.circularGapWidth), totalAngle);\n        gap += (progress.cornerRadius === 'Round') ? this.widthToAngle(0, progressWidth, (lineCapRadius * thickness), totalAngle) : 0;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((progress.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = progress.progressThickness || progress.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (progress.enableRtl) ? ((progress.startAngle - end > avlSegEnd) ? progress.startAngle - end : avlSegEnd) :\n                ((progress.startAngle + end < avlSegEnd) ? progress.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, progress.enableRtl);\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((progress.enableRtl) ? -gap : gap);\n            avlSegEnd += (progress.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.widthToAngle = function (min, max, value, totalAngle) {\n        var angle = ((value - min) / (max - min)) * totalAngle;\n        return angle;\n    };\n    Segment.prototype.createLinearRange = function (totalWidth, progress) {\n        var posX = progress.progressRect.x + ((progress.enableRtl) ? progress.progressRect.width : 0);\n        var startY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var gradX = (progress.enableRtl) ? 0.1 : -0.1;\n        var gradient;\n        var validRange;\n        var rangePath;\n        var option;\n        var startPos;\n        var endPos;\n        var startX;\n        var endX;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            validRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startPos = totalWidth * progress.calculateProgressRange(range[i].start, rangeMin, rangeMax);\n            endPos = totalWidth * progress.calculateProgressRange(range[i].end, rangeMin, rangeMax);\n            startX = posX + ((progress.enableRtl) ? -startPos : startPos);\n            endX = posX + ((progress.enableRtl) ? -endPos : endPos);\n            startX = (validRange) ? ((progress.isGradient && i > 0) ? startX + gradX : startX) : posX;\n            endX = (validRange) ? endX : posX;\n            color = (progress.isGradient) ? 'url(#lineRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_LinearRange_' + i, 'none', thickness, color, opacity, '0', 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + endX + ' ' + startY);\n            rangePath = progress.renderer.drawPath(option);\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setLinearGradientColor(i, range[i].color, endColor, startX, endX, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.createCircularRange = function (centerX, centerY, radius, progress) {\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var start = progress.startAngle;\n        var tolAngle = this.widthToAngle(progress.minimum, progress.maximum, progress.value, progress.totalAngle);\n        var gradient;\n        var startAngle;\n        var endAngle;\n        var rangePath;\n        var isValidRange;\n        var option;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            isValidRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startAngle = this.widthToAngle(rangeMin, rangeMax, range[i].start, tolAngle);\n            endAngle = this.widthToAngle(rangeMin, rangeMax, range[i].end, tolAngle);\n            startAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -startAngle : startAngle)) % 360 : start;\n            endAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -endAngle : endAngle)) % 360 : start;\n            color = (progress.isGradient) ? 'url(#circleRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_CircularRange_' + i, 'none', thickness, color, opacity, '0', getPathArc(centerX, centerY, radius, startAngle, endAngle, progress.enableRtl));\n            rangePath = progress.renderer.drawPath(option);\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setCircularGradientColor(i, range[i].color, endColor, startAngle, endAngle, radius, centerX, centerY, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.setLinearGradientColor = function (id, startColor, endColor, start, end, progress) {\n        var linearGradient;\n        var option;\n        var stopColor = [];\n        option = { id: 'lineRangeGrad_' + id + '', x1: start.toString(), x2: end.toString() };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    Segment.prototype.setCircularGradientColor = function (id, startColor, endColor, start, end, rad, x, y, progress) {\n        var linearGradient;\n        var option;\n        var stopColor = [];\n        var pos1 = degreeToLocation(x, y, rad, start);\n        var pos2 = degreeToLocation(x, y, rad, end);\n        option = {\n            id: 'circleRangeGrad_' + id + '', x1: pos1.x.toString(), x2: pos2.x.toString(),\n            y1: pos1.y.toString(), y2: pos2.y.toString()\n        };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    return Segment;\n}());\nexport { Segment };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { TextOption, colorNameToHex, convertHexToColor, setAttributes } from '../utils/helper';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { Segment } from './segment-progress';\nimport { svgLink, gradientType, stopElement } from '../model/constant';\n/**\n * Progress Bar of type Linear\n */\nvar Linear = /** @class */ (function () {\n    function Linear(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /** To render the linear track  */\n    Linear.prototype.renderLinearTrack = function () {\n        var progress = this.progress;\n        var linearTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearTrackGroup' });\n        var linearTrack;\n        var option;\n        var thickness;\n        var stroke;\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        thickness = (progress.trackThickness || progress.themeStyle.linearTrackThickness);\n        stroke = (progress.argsData.trackColor || progress.themeStyle.linearTrackColor);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearTrack = this.createRoundCornerSegment('_LinearTrack_', stroke, thickness, true, 0, progress);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Lineartrack', stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, progress.progressRect.width, thickness, 4, ''));\n                linearTrack = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Lineartrack', 'none', thickness, stroke, progress.themeStyle.trackOpacity, '0', progress.getPathLine(progress.progressRect.x, progress.progressRect.width, thickness));\n            linearTrack = progress.renderer.drawPath(option);\n            progress.trackWidth = linearTrack.getTotalLength();\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            if (progress.segmentCount > 1 && !this.isRange && !progress.enableProgressSegments) {\n                progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, thickness);\n                linearTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n        }\n        linearTrackGroup.appendChild(linearTrack);\n        progress.svgObject.appendChild(linearTrackGroup);\n    };\n    /** To render the linear progress  */\n    // tslint:disable-next-line:max-func-body-length\n    Linear.prototype.renderLinearProgress = function (refresh, previousWidth) {\n        if (previousWidth === void 0) { previousWidth = 0; }\n        var progress = this.progress;\n        var option;\n        var linearProgress;\n        var progressWidth;\n        var linearProgressWidth;\n        var clipPathLinear;\n        var clipPathIndeterminate;\n        var linearProgressGroup;\n        var animationdelay;\n        var thickness;\n        var stroke;\n        var segmentWidth;\n        var strippedStroke;\n        var ismaximum = (progress.value === progress.maximum);\n        progressWidth = progress.calculateProgressRange(progress.argsData.value);\n        progress.previousWidth = linearProgressWidth = progress.progressRect.width *\n            ((progress.isIndeterminate && !progress.enableProgressSegments) ? 1 : progressWidth);\n        if (!refresh) {\n            linearProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearProgressGroup' });\n        }\n        else {\n            linearProgressGroup = getElement(progress.element.id + '_LinearProgressGroup');\n        }\n        thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        stroke = (!progress.isStriped) ? this.checkingLinearProgressColor() : 'url(#' + progress.element.id + '_LinearStriped)';\n        if (progress.cornerRadius === 'Round4px') {\n            option = new PathOption(progress.element.id + '_Linearprogress', stroke, 0, 'none', progress.themeStyle.progressOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, (ismaximum || progress.isIndeterminate) ? '' : 'start'));\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearprogress', 'none', thickness, stroke, progress.themeStyle.progressOpacity, '0', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n        }\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = (!progress.enableProgressSegments) ? progress.segmentSize :\n            progress.calculateSegmentSize(progress.progressWidth, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderLinearBuffer(progress);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.cornerRadius === 'Round4px') {\n                if (progress.segmentCount > 1) {\n                    linearProgress = this.createRoundCornerSegment('_Linearprogress_', stroke, thickness, false, linearProgressWidth, progress, progress.themeStyle.progressOpacity);\n                }\n                else {\n                    linearProgress = progress.renderer.drawPath(option);\n                }\n            }\n            else {\n                if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                    segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                    linearProgress = this.segment.createLinearSegment(progress, '_LinearProgressSegment', linearProgressWidth, progress.themeStyle.progressOpacity, thickness, segmentWidth);\n                }\n                else if (this.isRange && !progress.isIndeterminate) {\n                    linearProgress = this.segment.createLinearRange(linearProgressWidth, progress);\n                }\n                else {\n                    if (!refresh) {\n                        linearProgress = progress.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(progress.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                        linearProgress.setAttribute('stroke', stroke);\n                    }\n                    if (progress.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                    }\n                    if (progress.cornerRadius === 'Round' && progressWidth) {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n            }\n            linearProgressGroup.appendChild(linearProgress);\n            if (progress.isStriped && !progress.isIndeterminate) {\n                strippedStroke = this.checkingLinearProgressColor();\n                this.renderLinearStriped(strippedStroke, linearProgressGroup, progress);\n            }\n            if (progress.isActive && !progress.isIndeterminate && !progress.isStriped) {\n                this.renderActiveState(linearProgressGroup, progressWidth, linearProgressWidth, thickness, refresh);\n            }\n            if (progress.animation.enable && !progress.isIndeterminate && !progress.isActive && !progress.isStriped) {\n                if ((progress.secondaryProgress !== null)) {\n                    animationdelay = progress.animation.delay + (this.bufferWidth - linearProgressWidth);\n                }\n                else {\n                    animationdelay = progress.animation.delay;\n                }\n                this.delay = animationdelay;\n                clipPathLinear = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearAnimation(clipPathLinear, progress, animationdelay, refresh ? previousWidth : 0);\n            }\n            if (progress.isIndeterminate) {\n                clipPathIndeterminate = progress.createClipPath(progress.clipPath, (progress.enableProgressSegments) ? 1 : progressWidth, null, refresh, thickness, progress.enableProgressSegments);\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearIndeterminate(((!progress.enableProgressSegments) ? clipPathIndeterminate : linearProgress), linearProgressWidth, thickness, progress, clipPathIndeterminate);\n            }\n            progress.svgObject.appendChild(linearProgressGroup);\n        }\n    };\n    /** To render the linear buffer */\n    Linear.prototype.renderLinearBuffer = function (progress) {\n        var linearBuffer;\n        var secondaryProgressWidth;\n        var clipPathBuffer;\n        var linearBufferGroup;\n        var linearBufferWidth;\n        var option;\n        var thickness;\n        var stroke;\n        var segmentWidth;\n        var ismaximum = (progress.secondaryProgress === progress.maximum);\n        secondaryProgressWidth = progress.calculateProgressRange(progress.secondaryProgress);\n        this.bufferWidth = linearBufferWidth = progress.progressRect.width * secondaryProgressWidth;\n        linearBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearBufferGroup' });\n        thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        stroke = this.checkingLinearProgressColor();\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearBuffer = this.createRoundCornerSegment('_Linearbuffer_', stroke, thickness, false, linearBufferWidth, progress, progress.themeStyle.bufferOpacity);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Linearbuffer', stroke, 0, 'none', progress.themeStyle.bufferOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearBufferWidth, thickness, 4, (ismaximum) ? '' : 'start'));\n                linearBuffer = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearbuffer', 'none', thickness, stroke, progress.themeStyle.bufferOpacity, '0', progress.getPathLine(progress.progressRect.x, linearBufferWidth, thickness));\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                linearBuffer = this.segment.createLinearSegment(progress, '_LinearBufferSegment', linearBufferWidth, progress.themeStyle.bufferOpacity, (progress.progressThickness || progress.themeStyle.linearProgressThickness), segmentWidth);\n            }\n            else {\n                linearBuffer = progress.renderer.drawPath(option);\n                if (progress.segmentCount > 1 && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-linecap', 'round');\n                }\n            }\n        }\n        linearBufferGroup.appendChild(linearBuffer);\n        if (progress.animation.enable) {\n            clipPathBuffer = progress.createClipPath(progress.bufferClipPath, secondaryProgressWidth, null, false, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n            linearBufferGroup.appendChild(progress.bufferClipPath);\n            linearBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doLinearAnimation(clipPathBuffer, progress, progress.animation.delay, 0);\n        }\n        progress.svgObject.appendChild(linearBufferGroup);\n    };\n    /** Render the Linear Label */\n    //tslint:disable-next-line:max-func-body-length\n    Linear.prototype.renderLinearLabel = function () {\n        var linearlabel;\n        var linearValue;\n        var posX;\n        var posY;\n        var argsData;\n        var textSize;\n        var labelValue;\n        var percentage = 100;\n        var option;\n        var defaultPos;\n        var far;\n        var center;\n        var pos;\n        var rgbValue;\n        var contrast;\n        var clipPath;\n        var linearLabelGroup;\n        var thickness = (this.progress.progressThickness || this.progress.themeStyle.linearProgressThickness);\n        var padding = 5;\n        var progress = this.progress;\n        var textAlignment = progress.labelStyle.textAlignment;\n        var labelText = progress.labelStyle.text;\n        var fontBackground = this.checkingLinearProgressColor();\n        var progressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value);\n        linearLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearLabelGroup' });\n        labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        linearValue = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : Math.round(labelValue);\n        // Checking the font color\n        rgbValue = convertHexToColor(colorNameToHex(fontBackground));\n        contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        argsData = {\n            cancel: false, text: labelText ? labelText : String(linearValue) + '%', color: progress.labelStyle.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle);\n            defaultPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - textSize.width / 2) :\n                (progress.progressRect.x + textSize.width / 2);\n            if (progress.labelOnTrack) {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    center = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - progressWidth / 2) :\n                        (progress.progressRect.x + progressWidth / 2);\n                    pos = (progress.enableRtl) ? (center <= defaultPos) : (center >= defaultPos);\n                    if (pos) {\n                        posX = center;\n                    }\n                    else {\n                        posX = defaultPos;\n                    }\n                }\n                else {\n                    far = (progress.enableRtl) ?\n                        ((progress.progressRect.x + progress.progressRect.width - progressWidth) + textSize.width / 2) :\n                        (progress.progressRect.x + progressWidth - textSize.width / 2);\n                    far += (progress.enableRtl) ? padding : -padding;\n                    pos = (progress.enableRtl) ? (far <= defaultPos) : (far >= defaultPos);\n                    if (pos) {\n                        posX = far;\n                    }\n                    else {\n                        posX = defaultPos;\n                    }\n                }\n            }\n            else {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    posX = (progress.progressRect.x + progress.progressRect.width) / 2;\n                }\n                else {\n                    posX = (progress.enableRtl) ?\n                        (progress.progressRect.x + textSize.width / 2) :\n                        (progress.progressRect.x + progress.progressRect.width - textSize.width / 2);\n                    posX += (progress.enableRtl) ? padding : -padding;\n                }\n            }\n            if (this.progress.cornerRadius === 'Round4px') {\n                posY = progress.progressRect.y + (thickness / 2) + (textSize.height / 4);\n            }\n            else {\n                posY = progress.progressRect.y + (progress.progressRect.height / 2) + (textSize.height / 4);\n            }\n            option = new TextOption(progress.element.id + '_linearLabel', progress.labelStyle.size || progress.themeStyle.linearFontSize, progress.labelStyle.fontStyle || progress.themeStyle.linearFontStyle, progress.labelStyle.fontFamily || progress.themeStyle.linearFontFamily, progress.labelStyle.fontWeight, 'middle', argsData.color || ((contrast >= 128) ? 'black' : 'white'), posX, posY);\n            linearlabel = progress.renderer.createText(option, argsData.text);\n            linearLabelGroup.appendChild(linearlabel);\n            if (progress.animation.enable && !progress.isIndeterminate) {\n                clipPath = progress.renderer.createClipPath({ 'id': progress.element.id + '_clippathLabel' });\n                progress.createClipPath(clipPath, 1, null, false, (progress.progressThickness || progress.themeStyle.linearProgressThickness), true);\n                linearLabelGroup.appendChild(clipPath);\n                linearlabel.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathLabel)');\n                this.animation.doLabelAnimation(linearlabel, 0, progressWidth, progress, this.delay, textSize.width);\n            }\n            progress.svgObject.appendChild(linearLabelGroup);\n        }\n    };\n    /** To render a progressbar active state */\n    Linear.prototype.renderActiveState = function (progressGroup, progressWidth, linearProgressWidth, thickness, refresh) {\n        var linearActive;\n        var activeClip;\n        var progress = this.progress;\n        var option;\n        var ismaximum = (progress.value === progress.maximum);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearActive = this.createRoundCornerSegment('_LinearActiveProgress_', '#ffffff', thickness, false, linearProgressWidth, progress, 0.5);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', '#ffffff', 0, 'none', 0.5, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, ismaximum ? '' : 'start'));\n                linearActive = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', 'none', thickness, '#ffffff', 0.5, '', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                linearActive = progress.renderer.drawPath(option);\n            }\n            else {\n                linearActive = getElement(progress.element.id + '_LinearActiveProgress');\n                linearActive.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n            }\n            if (progress.segmentCount > 1 && !this.isRange) {\n                linearActive.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && progressWidth && !this.isRange) {\n                linearActive.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        activeClip = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false);\n        linearActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(linearActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doLinearAnimation(activeClip, progress, 0, 0, linearActive);\n    };\n    /** To render a striped stroke */\n    Linear.prototype.renderLinearStriped = function (color, group, progress) {\n        var defs = progress.renderer.createDefs();\n        var linearGradient = document.createElementNS(svgLink, gradientType);\n        var stripWidth = 14;\n        var stop;\n        var gradOption;\n        var stopOption = [];\n        gradOption = {\n            id: progress.element.id + '_LinearStriped', x1: (progress.progressRect.x).toString(),\n            x2: (progress.progressRect.x + stripWidth).toString(),\n            spreadMethod: 'repeat', gradientUnits: 'userSpaceOnUse', gradientTransform: 'rotate(-45)'\n        };\n        stopOption = [{ offset: '50%', 'stop-color': color, 'stop-opacity': '1' },\n            { offset: '50%', 'stop-color': color, 'stop-opacity': '0.4' }];\n        linearGradient = setAttributes(gradOption, linearGradient);\n        for (var i = 0; i < stopOption.length; i++) {\n            stop = document.createElementNS(svgLink, stopElement);\n            stop = setAttributes(stopOption[i], stop);\n            linearGradient.appendChild(stop);\n        }\n        defs.appendChild(linearGradient);\n        group.appendChild(defs);\n        if (progress.animation.enable) {\n            this.animation.doStripedAnimation(linearGradient, progress, 0);\n        }\n    };\n    /** checking progress color */\n    Linear.prototype.checkingLinearProgressColor = function () {\n        var linearColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                linearColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                linearColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                linearColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                linearColor = progress.themeStyle.danger;\n                break;\n            default:\n                linearColor = (progress.argsData.progressColor || progress.themeStyle.linearProgressColor);\n        }\n        return linearColor;\n    };\n    /** Bootstrap 3 & Bootstrap 4 corner path */\n    Linear.prototype.cornerRadius = function (x, y, width, height, radius, pathtype) {\n        var path = '';\n        var endWidth = width;\n        var endRadius = radius;\n        switch (pathtype) {\n            case 'start':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n                break;\n            case 'end':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (endWidth - endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + endRadius + ',' + endRadius + ' '\n                    + 'v' + (height - 2 * endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + -endRadius + ',' + endRadius + ' '\n                    + 'h' + (radius - endWidth) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            case 'none':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            default:\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width - radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + ' '\n                    + 'v' + (height - 2 * radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + ' '\n                    + 'h' + (radius - width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n        }\n        return path;\n    };\n    /** Bootstrap 3 & Bootstrap 4 corner segment */\n    Linear.prototype.createRoundCornerSegment = function (id, stroke, thickness, isTrack, progressWidth, progress, opacity) {\n        var locX = progress.progressRect.x;\n        var locY = progress.progressRect.y;\n        var width = progress.progressRect.width;\n        var option;\n        var pathType;\n        var avlWidth;\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var segWidth = (width - ((progress.segmentCount - 1) * gapWidth)) / progress.segmentCount;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id + 'SegmentGroup' });\n        var segmentPath;\n        for (var i = 1; i <= progress.segmentCount; i++) {\n            if (i === 1 || i === progress.segmentCount) {\n                pathType = (i === 1) ? 'start' : 'end';\n            }\n            else {\n                pathType = 'none';\n            }\n            if (isTrack) {\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(locX, locY, segWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n            }\n            else {\n                avlWidth = (progressWidth < segWidth) ? progressWidth : segWidth;\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', opacity, '0', this.cornerRadius(locX, locY, avlWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n                progressWidth -= (segWidth + gapWidth);\n                if (progressWidth <= 0) {\n                    break;\n                }\n            }\n        }\n        return segmentGroup;\n    };\n    return Linear;\n}());\nexport { Linear };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getPathArc } from '../utils/helper';\nimport { Segment } from './segment-progress';\nimport { TextOption } from '../utils/helper';\n/**\n * Progressbar of type circular\n */\nvar Circular = /** @class */ (function () {\n    function Circular(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /** To render the circular track */\n    Circular.prototype.renderCircularTrack = function () {\n        var progress = this.progress;\n        var circularTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularTrackGroup' });\n        var radius;\n        var startAngle;\n        var endAngle;\n        var circularTrack;\n        var circularPath;\n        var option;\n        var fill;\n        var strokeWidth;\n        var stroke;\n        startAngle = progress.startAngle;\n        progress.totalAngle = (progress.endAngle - progress.startAngle) % 360;\n        progress.totalAngle = (progress.totalAngle <= 0 ? (360 + progress.totalAngle) : progress.totalAngle);\n        progress.totalAngle -= (progress.totalAngle === 360) ? 0.01 : 0;\n        this.trackEndAngle = endAngle = (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : +progress.totalAngle)) % 360;\n        this.centerX = progress.progressRect.x + (progress.progressRect.width / 2);\n        this.centerY = progress.progressRect.y + (progress.progressRect.height / 2);\n        this.maxThickness = Math.max(progress.trackThickness, progress.progressThickness) ||\n            Math.max(progress.themeStyle.circularProgressThickness, progress.themeStyle.circularTrackThickness);\n        this.availableSize = (Math.min(progress.progressRect.height, progress.progressRect.width) / 2) - this.maxThickness / 2;\n        radius = stringToNumber(progress.radius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        stroke = (progress.argsData.trackColor || progress.themeStyle.circularTrackColor);\n        fill = (progress.enablePieProgress) ? (progress.argsData.trackColor || progress.themeStyle.circularTrackColor) : 'none';\n        strokeWidth = (progress.enablePieProgress) ? 0 : (progress.trackThickness || progress.themeStyle.circularTrackThickness);\n        circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        option = new PathOption(progress.element.id + '_Circulartrack', fill, strokeWidth, stroke, progress.themeStyle.trackOpacity, '0', circularPath);\n        circularTrack = progress.renderer.drawPath(option);\n        progress.trackWidth = circularTrack.getTotalLength();\n        if (progress.segmentCount > 1 && !progress.enableProgressSegments && !progress.enablePieProgress && !this.isRange) {\n            progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, strokeWidth);\n            circularTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round' && !progress.enablePieProgress && !this.isRange) {\n            circularTrack.setAttribute('stroke-linecap', 'round');\n        }\n        circularTrackGroup.appendChild(circularTrack);\n        progress.svgObject.appendChild(circularTrackGroup);\n    };\n    /** To render the circular progress */\n    Circular.prototype.renderCircularProgress = function (previousEnd, previousTotalEnd, refresh) {\n        var progress = this.progress;\n        var startAngle = progress.startAngle;\n        var endAngle;\n        var totalAngle;\n        var radius;\n        var previousPath;\n        var progressTotalAngle;\n        var circularPath;\n        var progressEnd;\n        var circularProgress;\n        var option;\n        var linearClipPath;\n        var stroke;\n        var circularProgressGroup;\n        var fill;\n        var strokeWidth;\n        var segmentWidth;\n        var progressEndAngle;\n        var thickness;\n        if (!refresh) {\n            circularProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularProgressGroup' });\n        }\n        else {\n            circularProgressGroup = getElement(progress.element.id + '_CircularProgressGroup');\n        }\n        radius = stringToNumber(progress.innerRadius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        progress.previousTotalEnd = progressEnd = progress.calculateProgressRange(progress.argsData.value);\n        progressEndAngle = (progress.startAngle + ((progress.enableRtl) ? -progressEnd : progressEnd)) % 360;\n        progress.previousEndAngle = endAngle = ((progress.isIndeterminate && !progress.enableProgressSegments) ? (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : progress.totalAngle)) % 360 : progressEndAngle);\n        progressTotalAngle = (progressEnd - progress.startAngle) % 360;\n        progressTotalAngle = (progressTotalAngle <= 0 ? (360 + progressTotalAngle) : progressTotalAngle);\n        progressTotalAngle -= (progressTotalAngle === 360) ? 0.01 : 0;\n        circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        stroke = this.checkingCircularProgressColor();\n        fill = (progress.enablePieProgress) ? stroke : 'none';\n        thickness = (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        strokeWidth = (progress.enablePieProgress) ? 0 : thickness;\n        option = new PathOption(progress.element.id + '_Circularprogress', fill, strokeWidth, stroke, progress.themeStyle.progressOpacity, '0', circularPath);\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = this.validateSegmentSize(progress, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderCircularBuffer(progress, radius, progressTotalAngle);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress) {\n                totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                circularProgress = this.segment.createCircularSegment(progress, '_CircularProgressSegment', this.centerX, this.centerY, radius, progress.argsData.value, progress.themeStyle.progressOpacity, thickness, totalAngle, segmentWidth);\n            }\n            else if (this.isRange && !progress.isIndeterminate) {\n                circularProgress = this.segment.createCircularRange(this.centerX, this.centerY, radius, progress);\n            }\n            else {\n                if (!refresh) {\n                    circularProgress = progress.renderer.drawPath(option);\n                }\n                else {\n                    circularProgress = getElement(progress.element.id + '_Circularprogress');\n                    previousPath = circularProgress.getAttribute('d');\n                    circularProgress.setAttribute('stroke', stroke);\n                    circularProgress.setAttribute('d', circularPath);\n                }\n                if (progress.segmentCount > 1 && !progress.enablePieProgress) {\n                    circularProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                    circularProgress.setAttribute('stroke-linecap', 'round');\n                }\n            }\n            circularProgressGroup.appendChild(circularProgress);\n            if (progress.isActive && !progress.isIndeterminate && !progress.enablePieProgress) {\n                this.renderActiveState(circularProgressGroup, radius, strokeWidth, circularPath, progressEndAngle, progressEnd, refresh);\n            }\n            if (progress.animation.enable || progress.isIndeterminate) {\n                this.delay = (progress.secondaryProgress !== null) ? 300 : progress.animation.delay;\n                linearClipPath = progress.createClipPath(progress.clipPath, null, refresh ? previousPath : '', refresh);\n                circularProgressGroup.appendChild(progress.clipPath);\n                if (progress.animation.enable && !progress.isIndeterminate && !progress.isActive) {\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularAnimation(this.centerX, this.centerY, radius, progressEndAngle, progressEnd, linearClipPath, progress, thickness, this.delay, refresh ? previousEnd : null, refresh ? previousTotalEnd : null);\n                }\n                if (progress.isIndeterminate) {\n                    if (progress.enableProgressSegments) {\n                        linearClipPath.setAttribute('d', getPathArc(this.centerX, this.centerY, radius + (thickness / 2), progress.startAngle, this.trackEndAngle, progress.enableRtl, true));\n                    }\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularIndeterminate((!progress.enableProgressSegments) ? linearClipPath : circularProgress, progress, startAngle, progressEndAngle, this.centerX, this.centerY, radius, thickness, linearClipPath);\n                }\n            }\n            progress.svgObject.appendChild(circularProgressGroup);\n        }\n    };\n    /** To render the circular buffer */\n    Circular.prototype.renderCircularBuffer = function (progress, radius, progressTotalAngle) {\n        var bufferClipPath;\n        var bufferEnd;\n        var circularBuffer;\n        var circularBufferGroup;\n        var circularPath;\n        var option;\n        var fill;\n        var strokeWidth;\n        var segmentWidth;\n        var totalAngle;\n        var endAngle;\n        var stroke;\n        circularBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_ CircularBufferGroup' });\n        bufferEnd = progress.calculateProgressRange(progress.secondaryProgress);\n        endAngle = (progress.startAngle + ((progress.enableRtl) ? -bufferEnd : bufferEnd)) % 360;\n        circularPath = getPathArc(this.centerX, this.centerY, radius, progress.startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        stroke = this.checkingCircularProgressColor();\n        fill = (progress.enablePieProgress) ? stroke : 'none';\n        strokeWidth = (progress.enablePieProgress) ? 0 : (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        option = new PathOption(progress.element.id + '_Circularbuffer', fill, strokeWidth, stroke, progress.themeStyle.bufferOpacity, '0', circularPath);\n        if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress && !this.isRange) {\n            totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n            segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n            circularBuffer = this.segment.createCircularSegment(progress, '_CircularBufferSegment', this.centerX, this.centerY, radius, progress.secondaryProgress, progress.themeStyle.bufferOpacity, strokeWidth, totalAngle, segmentWidth);\n        }\n        else {\n            circularBuffer = progress.renderer.drawPath(option);\n            if (progress.segmentCount > 1 && !progress.enablePieProgress && !this.isRange) {\n                circularBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                circularBuffer.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        circularBufferGroup.appendChild(circularBuffer);\n        if (progress.animation.enable && !progress.isActive) {\n            bufferClipPath = progress.createClipPath(progress.bufferClipPath, null, '', false);\n            circularBufferGroup.appendChild(progress.bufferClipPath);\n            circularBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, bufferEnd, bufferClipPath, progress, (progress.progressThickness || progress.themeStyle.circularProgressThickness), progress.animation.delay);\n        }\n        progress.svgObject.appendChild(circularBufferGroup);\n    };\n    /** To render the circular Label */\n    Circular.prototype.renderCircularLabel = function () {\n        var end;\n        var circularLabel;\n        var circularValue;\n        var centerY;\n        var argsData;\n        var textSize;\n        var labelValue;\n        var option;\n        var circularLabelGroup;\n        var percentage = 100;\n        var progress = this.progress;\n        var labelText = progress.labelStyle.text;\n        circularLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularLabelGroup' });\n        if (document.getElementById(circularLabelGroup.id)) {\n            document.getElementById(circularLabelGroup.id).remove();\n        }\n        labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        circularValue = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : Math.round(labelValue);\n        argsData = {\n            cancel: false, text: labelText ? labelText : String(circularValue) + '%', color: progress.labelStyle.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle);\n            centerY = this.centerY + (textSize.height / 2);\n            option = new TextOption(progress.element.id + '_circularLabel', progress.labelStyle.size || progress.themeStyle.circularFontSize, progress.labelStyle.fontStyle || progress.themeStyle.circularFontStyle, progress.labelStyle.fontFamily || progress.themeStyle.circularFontFamily, progress.labelStyle.fontWeight, 'middle', argsData.color || progress.themeStyle.fontColor, this.centerX, centerY, progress.progressRect.width, progress.progressRect.height);\n            circularLabel = progress.renderer.createText(option, argsData.text);\n            circularLabelGroup.appendChild(circularLabel);\n            if (progress.animation.enable && !progress.isIndeterminate) {\n                end = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n                end = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : end;\n                this.animation.doLabelAnimation(circularLabel, progress.startAngle, end, progress, this.delay);\n            }\n            progress.svgObject.appendChild(circularLabelGroup);\n        }\n    };\n    /** To render a progressbar active state */\n    Circular.prototype.renderActiveState = function (progressGroup, radius, strokeWidth, circularPath, endAngle, totalEnd, refresh) {\n        var circularActive;\n        var activeClip;\n        var option;\n        var progress = this.progress;\n        var thickness = strokeWidth + 1;\n        if (!refresh) {\n            option = new PathOption(progress.element.id + '_CircularActiveProgress', 'none', thickness, '#ffffff', 0.5, '0', circularPath);\n            circularActive = progress.renderer.drawPath(option);\n        }\n        else {\n            circularActive = getElement(progress.element.id + '_CircularActiveProgress');\n            circularActive.setAttribute('d', circularPath);\n        }\n        if (progress.segmentCount > 1) {\n            circularActive.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round') {\n            circularActive.setAttribute('stroke-linecap', 'round');\n        }\n        activeClip = progress.createClipPath(progress.clipPath, null, '', refresh);\n        circularActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(circularActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, totalEnd, activeClip, progress, thickness, 0, null, null, circularActive);\n    };\n    /** Checking the segment size */\n    Circular.prototype.validateSegmentSize = function (progress, thickness) {\n        var validSegment;\n        var rDiff;\n        var progressSegment;\n        rDiff = parseInt(progress.radius, 10) - parseInt(progress.innerRadius, 10);\n        if (rDiff !== 0 && !progress.enableProgressSegments) {\n            progressSegment = progress.trackWidth + ((rDiff < 0) ? (progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10) :\n                -(progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10));\n            validSegment = progress.calculateSegmentSize(progressSegment, thickness);\n        }\n        else if (progress.enableProgressSegments) {\n            validSegment = progress.calculateSegmentSize(progress.progressWidth, thickness);\n        }\n        else {\n            validSegment = progress.segmentSize;\n        }\n        return validSegment;\n    };\n    /** checking progress color */\n    Circular.prototype.checkingCircularProgressColor = function () {\n        var circularColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                circularColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                circularColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                circularColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                circularColor = progress.themeStyle.danger;\n                break;\n            default:\n                circularColor = (progress.argsData.progressColor || progress.themeStyle.circularProgressColor);\n        }\n        return circularColor;\n    };\n    return Circular;\n}());\nexport { Circular };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection, EventHandler } from '@syncfusion/ej2-base';\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, Size, RectOption, stringToNumber } from './utils/helper';\nimport { Margin, Animation, Font, RangeColor } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { mouseClick, mouseDown, mouseLeave, mouseMove, mouseUp } from './model/constant';\nimport { ProgressAnnotationSettings } from './model/index';\nimport { Linear } from './types/linear-progress';\nimport { Circular } from './types/circular-progress';\nimport { ProgressAnimation } from './utils/progress-animation';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.linear = new Linear(_this);\n        /** @private */\n        _this.circular = new Circular(_this);\n        /** @private */\n        _this.annotateAnimation = new ProgressAnimation();\n        /** @private */\n        _this.destroyIndeterminate = false;\n        return _this;\n    }\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        // tslint:disable-next-line\n        this.isBlazor = window[blazor];\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.wireEvents();\n    };\n    ProgressBar.prototype.initPrivateVariable = function () {\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n    };\n    ProgressBar.prototype.render = function () {\n        var _this = this;\n        this.trigger('load', { progressBar: this.isBlazor ? {} : this });\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.calculateProgressBarSize();\n        this.setTheme();\n        this.createSVG();\n        this.argsData = { value: this.value, progressColor: this.progressColor, trackColor: this.trackColor };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData, function () { _this.controlRendering(); });\n        }\n        else {\n            this.trigger(valueChanged, this.argsData, function () { _this.controlRendering(); });\n        }\n    };\n    ProgressBar.prototype.controlRendering = function () {\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this.isBlazor ? {} : this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * calculate size of the progress bar\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width = this.progressSize.width - (this.margin.left + this.margin.right);\n        this.progressRect.height = this.progressSize.height - (this.margin.top + this.margin.bottom);\n    };\n    /**\n     * Render Annotation\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.createSecElement();\n        this.renderAnnotation();\n        this.setSecondaryElementPosition();\n    };\n    /**\n     * Render SVG Element\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.renderTrack();\n        this.renderProgress();\n        this.renderLabel();\n        this.renderAnnotations();\n    };\n    ProgressBar.prototype.createSecElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute',\n        });\n        this.element.appendChild(this.secElement);\n    };\n    /**\n     * To set the left and top position for annotation for center aligned\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.removeSvg();\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.renderTrack = function () {\n        if (this.type === 'Linear') {\n            this.linear.renderLinearTrack();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularTrack();\n        }\n    };\n    ProgressBar.prototype.renderProgress = function () {\n        this.clipPathElement();\n        if (this.type === 'Linear') {\n            this.linear.renderLinearProgress();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularProgress();\n        }\n    };\n    ProgressBar.prototype.renderLabel = function () {\n        if (this.type === 'Linear' && this.showProgressValue && !this.isIndeterminate) {\n            this.linear.renderLinearLabel();\n        }\n        else if (this.type === 'Circular' && this.showProgressValue && !this.isIndeterminate) {\n            this.circular.renderCircularLabel();\n        }\n        this.element.appendChild(this.svgObject);\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round' && width) ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round' && width) ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (value, minimum, maximum) {\n        var result;\n        var endValue;\n        var min = minimum || this.minimum;\n        var max = maximum || this.maximum;\n        endValue = (value - min) / (max - min) * ((this.type === 'Linear') ? 1 : this.totalAngle);\n        result = (value < min || value > max) ? 0 : endValue;\n        return result;\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, range, d, refresh, thickness, isLabel, isMaximum) {\n        var path;\n        var rect;\n        var option;\n        var posx;\n        var posy;\n        var pathWidth;\n        var x = this.progressRect.x;\n        var totalWidth = this.progressRect.width;\n        if (this.type === 'Linear') {\n            if (this.cornerRadius === 'Round4px') {\n                posx = x;\n                pathWidth = totalWidth * range;\n                posx += (!isLabel) ? (-4) : 0;\n                posy = this.progressRect.y;\n                pathWidth += ((!isLabel && isMaximum) || this.isIndeterminate) ? 4 : 0;\n            }\n            else {\n                posx = (this.enableRtl && !isLabel) ? (x + totalWidth) : x;\n                pathWidth = totalWidth * range;\n                posx += (this.cornerRadius === 'Round' && !isLabel) ?\n                    ((this.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n                posy = (this.progressRect.y + (this.progressRect.height / 2)) - (thickness / 2);\n                pathWidth += (this.cornerRadius === 'Round' && !isLabel) ? (lineCapRadius * thickness) : 0;\n            }\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect', 'transparent', 1, 'transparent', 1, new Rect(posx, posy, thickness, pathWidth));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect');\n                path.setAttribute('width', (pathWidth).toString());\n                if (this.isActive) {\n                    path.setAttribute('x', (posx).toString());\n                }\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    /**\n     * Theming for progress bar\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.cornerRadius = this.cornerRadius === 'Auto' ?\n                    ((this.type === 'Linear') ? 'Round4px' : 'Round') : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * Annotation for progress bar\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     * @return {boolean}\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function (e) {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n            cancel: (this.cancelResize) ? true : false,\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            if ((_this.width === null || _this.height === null) && !arg.cancel) {\n                _this.secElement.innerHTML = '';\n                _this.calculateProgressBarSize();\n                _this.createSVG();\n                _this.renderElements();\n            }\n        }, 500);\n        return false;\n    };\n    ProgressBar.prototype.progressMouseClick = function (e) {\n        this.mouseEvent(mouseClick, e);\n    };\n    ProgressBar.prototype.progressMouseDown = function (e) {\n        this.mouseEvent(mouseDown, e);\n    };\n    ProgressBar.prototype.progressMouseMove = function (e) {\n        this.mouseEvent(mouseMove, e);\n    };\n    ProgressBar.prototype.progressMouseUp = function (e) {\n        this.mouseEvent(mouseUp, e);\n    };\n    ProgressBar.prototype.progressMouseLeave = function (e) {\n        this.mouseEvent(mouseLeave, e);\n    };\n    ProgressBar.prototype.mouseEvent = function (eventName, e) {\n        var element = e.target;\n        this.trigger(eventName, { target: element.id });\n    };\n    /**\n     * Method to un-bind events for progress bar\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, 'click', this.progressMouseClick);\n        EventHandler.remove(this.element, startEvent, this.progressMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.progressMouseMove);\n        EventHandler.remove(this.element, stopEvent, this.progressMouseUp);\n        EventHandler.remove(this.element, cancelEvent, this.progressMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, 'click', this.progressMouseClick, this);\n        EventHandler.add(this.element, startEvent, this.progressMouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.progressMouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.progressMouseUp, this);\n        EventHandler.add(this.element, cancelEvent, this.progressMouseLeave, this);\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    break;\n                case 'value':\n                    this.cancelResize = (this.animation.enable) ? true : false;\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.argsData.progressColor,\n                        trackColor: this.argsData.trackColor\n                    };\n                    if (this.argsData.value < oldProp.value && this.animation.enable) {\n                        this.argsData.value = oldProp.value;\n                    }\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.circular.renderCircularProgress(this.previousEndAngle, this.previousTotalEnd, !isNullOrUndefined(oldProp.value));\n                        if (this.showProgressValue) {\n                            this.circular.renderCircularLabel();\n                        }\n                        if (this.progressAnnotationModule && this.animation.enable && !this.isIndeterminate) {\n                            this.annotateAnimation.doAnnotationAnimation(this.clipPath, this, this.annotateEnd, this.annotateTotal);\n                        }\n                    }\n                    else {\n                        this.linear.renderLinearProgress(!isNullOrUndefined(oldProp.value), this.previousWidth);\n                    }\n                    break;\n                case 'animation':\n                    this.createSVG();\n                    this.renderElements();\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    ProgressBar.prototype.show = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Visible');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = false;\n                if (this.type === 'Linear') {\n                    this.linear.renderLinearProgress(true);\n                }\n                else {\n                    this.circular.renderCircularProgress(null, null, true);\n                }\n            }\n        }\n    };\n    ProgressBar.prototype.hide = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Hidden');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = true;\n            }\n        }\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of ProgressBar\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        // tslint:disable-next-line:no-any\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n        if (!this.refreshing) {\n            this.destroyIndeterminate = true;\n        }\n    };\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isActive\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isGradient\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isStriped\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"role\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(true)\n    ], ProgressBar.prototype, \"labelOnTrack\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enablePieProgress\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableProgressSegments\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: 'Normal', fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([{}], RangeColor)\n    ], ProgressBar.prototype, \"rangeColors\", void 0);\n    ProgressBar = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","import * as index from './index';\nindex.ProgressBar.Inject(index.ProgressAnnotation);\nexport * from './index';\n"],"names":["convertToHexCode","value","componentToHex","r","g","b","hex","toString","length","convertHexToColor","result","exec","ColorValue","parseInt","colorNameToHex","color","element","document","body","appendChild","createElement","id","getElementById","style","window","getComputedStyle","remove","isRGBValue","degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","getPathArc","startAngle","endAngle","enableRtl","pieView","start","end","largeArcFlag","sweepFlag","stringToNumber","containerSize","undefined","indexOf","setAttributes","options","keys","Object","i","setAttribute","effect","currentTime","startValue","endValue","duration","getElement","removeElement","getProgressThemeColor","theme","linearTrackColor","linearProgressColor","circularTrackColor","circularProgressColor","backgroundColor","fontColor","linearFontFamily","linearFontSize","linearFontStyle","circularFontFamily","circularFontStyle","circularFontSize","progressOpacity","trackOpacity","bufferOpacity","linearGapWidth","circularGapWidth","linearTrackThickness","linearProgressThickness","circularTrackThickness","circularProgressThickness","success","danger","warning","info","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Rect","height","width","Size","Pos","RectOption","_super","fill","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","PathOption","TextOption","fontSize","fontStyle","fontFamily","fontWeight","textAnchor","ProgressLocation","__decorate","decorators","target","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Margin","apply","Property","ChildProperty","Font","Animation","ProgressAnnotationSettings","RangeColor","svgLink","AnnotationBase","control","render","annotation","index","styles","innerHTML","content","processAnnotation","parentElement","annotationElement","location","setElementStyle","redraw","isReact","clearTemplate","argsData","cancel","name","trigger","Location","annotationRadius","annotationAngle","left","top","renderReactTemplates","angle","radius1","parseFloat","progressRect","round","progressSize","ProgressAnimation","doLinearAnimation","progress","delay","previousWidth","active","animation","linearPath","getAttribute","opacityValue","cornerRadius","rtlX","visibility","animate","args","cancelResize","timeStamp","isActive","activeAnimate","model","trackColor","progressColor","doLinearIndeterminate","progressWidth","thickness","clipPath","enableProgressSegments","getPathLine","destroyIndeterminate","doStripedAnimation","point","doCircularAnimation","progressEnd","totalEnd","previousTotal","startPos","endPos","circularPath","pathRadius","isNullOrUndefined","doCircularIndeterminate","circularProgress","doLabelAnimation","labelPath","textSize","label","text","xPos","valueChanged","labelText","labelStyle","labelPos","textAlignment","posX","type","totalAngle","doAnnotationAnimation","previousEnd","annotatElementChanged","firstAnnotatElement","annotateValueChanged","annotateValue","isAnnotation","annotations","progressAnnotationModule","children","tagName","minimum","maximum","annotateTotal","annotateEnd","t","time","pow","ProgressAnnotation","renderAnnotations","map","enable","isIndeterminate","getModuleName","destroy","Segment","createLinearSegment","locX","locY","gapWidth","themeStyle","avlWidth","segmentCount","avlSegWidth","segWidth","option","segmentPath","gap","segmentGroup","renderer","createGroup","count","ceil","j","tolWidth","linearThickness","progressThickness","segmentColor","getLinearSegmentPath","drawPath","createCircularSegment","widthToAngle","size","avlTolEnd","avlEnd","circularSegment","segmentEnd","gapCount","floor","avlSegEnd","circularThickness","min","max","createLinearRange","totalWidth","gradient","validRange","rangePath","startX","endX","endColor","startY","rangeGroup","range","rangeColors","rangeMin","rangeMax","gradX","calculateProgressRange","isGradient","setLinearGradientColor","createCircularRange","isValidRange","tolAngle","setCircularGradientColor","startColor","linearGradient","stopColor","x1","x2","colorStop","drawGradient","firstElementChild","rad","pos1","pos2","y1","y2","Linear","segment","renderLinearTrack","linearTrack","linearTrackGroup","isRange","trackThickness","createRoundCornerSegment","trackWidth","getTotalLength","segmentSize","calculateSegmentSize","svgObject","renderLinearProgress","refresh","linearProgress","linearProgressWidth","clipPathLinear","clipPathIndeterminate","linearProgressGroup","animationdelay","segmentWidth","strippedStroke","ismaximum","isStriped","checkingLinearProgressColor","secondaryProgress","renderLinearBuffer","renderLinearStriped","renderActiveState","bufferWidth","createClipPath","linearBuffer","secondaryProgressWidth","clipPathBuffer","linearBufferGroup","linearBufferWidth","bufferClipPath","renderLinearLabel","linearlabel","linearValue","posY","labelValue","defaultPos","far","center","rgbValue","contrast","linearLabelGroup","fontBackground","String","measureText","labelOnTrack","createText","progressGroup","linearActive","activeClip","group","stop","defs","createDefs","createElementNS","stopOption","offset","stop-color","stop-opacity","spreadMethod","gradientUnits","gradientTransform","linearColor","role","pathtype","path","endWidth","endRadius","isTrack","pathType","Circular","renderCircularTrack","circularTrack","strokeWidth","circularTrackGroup","trackEndAngle","maxThickness","availableSize","enablePieProgress","renderCircularProgress","previousTotalEnd","previousPath","progressTotalAngle","linearClipPath","circularProgressGroup","progressEndAngle","innerRadius","previousEndAngle","checkingCircularProgressColor","validateSegmentSize","renderCircularBuffer","bufferEnd","circularBuffer","circularBufferGroup","renderCircularLabel","circularLabel","circularValue","circularLabelGroup","circularActive","validSegment","rDiff","progressSegment","abs","circularColor","ProgressBar","linear","circular","annotateAnimation","preRender","isBlazor","unWireEvents","initPrivateVariable","wireEvents","progressBar","display","position","calculateProgressBarSize","setTheme","createSVG","controlRendering","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","margin","right","bottom","createSecElement","renderAnnotation","setSecondaryElementPosition","renderTrack","renderProgress","renderLabel","secElement","getBoundingClientRect","svgRect","removeSvg","SvgRenderer","createSvg","clipPathElement","showProgressValue","moveTo","lineTo","cornerCount","isLabel","isMaximum","posx","posy","pathWidth","drawRectangle","progressResize","e","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","setTimeout","isDestroyed","progressMouseClick","mouseEvent","progressMouseDown","progressMouseMove","progressMouseUp","progressMouseLeave","eventName","startEvent","Browser","touchStartEvent","moveEvent","touchMoveEvent","stopEvent","touchEndEvent","cancelEvent","isPointer","EventHandler","removeEventListener","isTouch","resizeBounds","add","bind","addEventListener","svgElement","onPropertyChanged","newProp","oldProp","_i","_a","requiredModules","modules","some","push","member","getPersistData","show","hide","classList","refreshing","Complex","Event","Collection","NotifyPropertyChanges","Component","index.ProgressBar","Inject","index.ProgressAnnotation"],"mappings":"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"}