{"version":3,"file":"ej2-progressbar.umd.min.js","sources":["../src/progressbar/utils/helper.js","../src/progressbar/model/progress-base.js","../src/progressbar/model/constant.js","../src/progressbar/model/annotation.js","../src/progressbar/utils/progress-animation.js","../src/progressbar/model/progress-annotation.js","../src/progressbar/types/segment-progress.js","../src/progressbar/types/linear-progress.js","../src/progressbar/types/circular-progress.js","../src/progressbar/progressbar.js","../src/progressbar/utils/theme.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar Pos = /** @class */ (function () {\n    function Pos(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Pos;\n}());\nexport { Pos };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    document.body.appendChild(createElement('text', { id: 'chartmeasuretext' }));\n    element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    remove(element);\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, fontSize, fontStyle, fontFamily, fontWeight, textAnchor, fill, x, y, width, height) {\n        this.id = id;\n        this['font-size'] = fontSize;\n        this['font-style'] = fontStyle;\n        this['font-family'] = fontFamily;\n        this['font-weight'] = fontWeight;\n        this['text-anchor'] = textAnchor;\n        this.fill = fill;\n        this.x = x;\n        this.y = y;\n        this.width = width ? width : 0;\n        this.height = height ? height : 0;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/** calculate the start and end point of circle */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/** calculate the path of the circle */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, pieView) {\n    var start = degreeToLocation(x, y, radius, startAngle);\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (pieView) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y + ' ' + 'Z';\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/** @private */\n// tslint:disable-next-line\nexport function setAttributes(options, element) {\n    var keys = Object.keys(options);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], options[keys[i]]);\n    }\n    return element;\n}\n/**\n * Animation Effect Calculation\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in progressbar\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Far')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"text\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n/**\n * RangeColor\n */\nvar RangeColor = /** @class */ (function (_super) {\n    __extends(RangeColor, _super);\n    function RangeColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], RangeColor.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"end\", void 0);\n    return RangeColor;\n}(ChildProperty));\nexport { RangeColor };\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n/**\n * mouseClick event\n */\nexport var mouseClick = 'mouseClick';\n/**\n * mouseDown event\n */\nexport var mouseDown = 'mouseDown';\n/**\n * mouseUp event\n */\nexport var mouseUp = 'mouseUp';\n/**\n * mouseMove event\n */\nexport var mouseMove = 'mouseMove';\n/**\n * mouseLeave event\n */\nexport var mouseLeave = 'mouseLeave';\n/**\n * svgLink\n */\nexport var svgLink = 'http://www.w3.org/2000/svg';\n/**\n * gradient type\n */\nexport var gradientType = 'linearGradient';\n/**\n * stop element\n */\nexport var stopElement = 'stop';\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for progress annotation\n     * @param control\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var annotationElement;\n        var location;\n        location = new ProgressLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n            // tslint:disable-next-line:no-any\n            if (this.control.isReact) {\n                this.control.clearTemplate();\n            }\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n            // tslint:disable-next-line:no-any\n            if (this.control.isReact) {\n                this.control.renderReactTemplates();\n            }\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","import { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius, completeAngle } from '../model/constant';\n/**\n * Animation for progress bar\n */\nvar ProgressAnimation = /** @class */ (function () {\n    function ProgressAnimation() {\n    }\n    /** Linear Animation */\n    ProgressAnimation.prototype.doLinearAnimation = function (element, progress, delay, previousWidth, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        var width = linearPath.getAttribute('width');\n        var x = linearPath.getAttribute('x');\n        var opacityValue = 0;\n        var value = 0;\n        var start = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? previousWidth : parseInt(x, 10);\n        var end = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? parseInt(width, 10) - start :\n            parseInt(width, 10) - previousWidth;\n        var rtlX = parseInt(x, 10) - end;\n        linearPath.style.visibility = 'hidden';\n        animation.animate(linearPath, {\n            duration: duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), parseInt(x, 10), parseInt(width, 10), true);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, true);\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), 0, parseInt(width, 10), false);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                    }\n                }\n            },\n            end: function (model) {\n                progress.cancelResize = false;\n                linearPath.style.visibility = '';\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (progress.isActive) {\n                        linearPath.setAttribute('x', x.toString());\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                    else {\n                        linearPath.setAttribute('x', rtlX.toString());\n                    }\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                    if (progress.isActive) {\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /** Linear Indeterminate */\n    ProgressAnimation.prototype.doLinearIndeterminate = function (element, progressWidth, thickness, progress, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var x = linearPath.getAttribute('x');\n        var width = linearPath.getAttribute('width');\n        var value = 0;\n        var start = (width) ? -(parseInt(width, 10)) : -progressWidth;\n        var end = (progress.progressRect.x + progress.progressRect.width) + ((width) ? (parseInt(width, 10)) : progressWidth);\n        var duration = (!progress.enableProgressSegments) ? 2500 : 3500;\n        animation.animate(clipPath, {\n            duration: duration,\n            delay: 0,\n            progress: function (args) {\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    value = effect(args.timeStamp, parseInt(x, 10) || progress.progressRect.x + progressWidth, end, args.duration, true);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n                else {\n                    value = effect(args.timeStamp, start, end, args.duration, false);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n            },\n            end: function () {\n                if (progress.enableRtl && !progress.enableProgressSegments && !(progress.cornerRadius === 'Round4px')) {\n                    linearPath.setAttribute('x', x.toString());\n                }\n                else if (!progress.enableProgressSegments) {\n                    linearPath.setAttribute('x', start.toString());\n                }\n                if (!progress.destroyIndeterminate) {\n                    _this.doLinearIndeterminate(element, progressWidth, thickness, progress, clipPath);\n                }\n            }\n        });\n    };\n    /** Linear striped */\n    ProgressAnimation.prototype.doStripedAnimation = function (element, progress, value, delay) {\n        var _this = this;\n        var animation = new Animation({});\n        var point = 1000 / progress.animation.duration;\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: progress.animation.delay,\n            progress: function () {\n                value += (progress.enableRtl) ? -point : point;\n                element.setAttribute('gradientTransform', 'translate(' + value + ') rotate(-45)');\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doStripedAnimation(element, progress, value, false);\n                }\n            }\n        });\n    };\n    /** Circular animation */\n    ProgressAnimation.prototype.doCircularAnimation = function (x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var circularPath = element;\n        var start = progress.startAngle;\n        var pathRadius = radius + (thickness / 2);\n        var end = 0;\n        var opacityValue = 0;\n        var startPos;\n        var endPos;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        start += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n        totalEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            (lineCapRadius / 2) * thickness : 0;\n        progressEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? -(lineCapRadius / 2) * thickness : (lineCapRadius / 2) * thickness) : 0;\n        startPos = (!isNullOrUndefined(startValue)) ? startValue : start;\n        endPos = (!isNullOrUndefined(startValue)) ? totalEnd - previousTotal : totalEnd;\n        circularPath.setAttribute('visibility', 'Hidden');\n        animation.animate(circularPath, {\n            duration: duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (args.timeStamp >= args.delay) {\n                    circularPath.setAttribute('visibility', 'visible');\n                    if (progress.isActive) {\n                        end = _this.activeAnimate((args.timeStamp / args.duration), startPos, endPos, progress.enableRtl);\n                        opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                        active.setAttribute('opacity', opacityValue.toString());\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                    else {\n                        end = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                }\n            },\n            end: function (model) {\n                progress.cancelResize = false;\n                circularPath.setAttribute('visibility', '');\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, progressEnd, progress.enableRtl, true));\n                if (progress.isActive) {\n                    _this.doCircularAnimation(x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active);\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /** Circular indeterminate */\n    ProgressAnimation.prototype.doCircularIndeterminate = function (circularProgress, progress, start, end, x, y, radius, thickness, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var pathRadius = radius + ((!progress.enableProgressSegments) ? (thickness / 2) : 0);\n        var value = (!progress.enableProgressSegments) ? 3 : 2;\n        animation.animate(clipPath, {\n            progress: function () {\n                circularProgress.style.visibility = 'visible';\n                start += (progress.enableRtl) ? -value : value;\n                end += (progress.enableRtl) ? -value : value;\n                circularProgress.setAttribute('d', getPathArc(x, y, pathRadius, start % 360, end % 360, progress.enableRtl, !progress.enableProgressSegments));\n            },\n            end: function (model) {\n                if (!progress.destroyIndeterminate) {\n                    _this.doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius, thickness, clipPath);\n                }\n            }\n        });\n    };\n    /** To do the label animation for progress bar */\n    ProgressAnimation.prototype.doLabelAnimation = function (labelPath, start, end, progress, delay, textSize) {\n        var animation = new Animation({});\n        var label = new Animation({});\n        var startPos;\n        var endPos;\n        var text = labelPath.innerHTML;\n        var value = 0;\n        var xPos = 0;\n        var valueChanged = 0;\n        var percentage = 100;\n        var labelText = progress.labelStyle.text;\n        var labelPos = progress.labelStyle.textAlignment;\n        var posX = parseInt(labelPath.getAttribute('x'), 10);\n        labelPath.setAttribute('visibility', 'Hidden');\n        if (progress.type === 'Linear') {\n            startPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width) + (textSize / 2) :\n                progress.progressRect.x - (textSize / 2);\n            startPos = (startPos <= 0) ? 0 : startPos;\n            endPos = (progress.enableRtl) ? startPos - posX : posX - startPos;\n        }\n        animation.animate(labelPath, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        if (labelText === '') {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            valueChanged = parseInt(((value / progress.progressRect.width) * percentage).toString(), 10);\n                            labelPath.innerHTML = valueChanged.toString() + '%';\n                            if (labelPos === 'Far' || labelPos === 'Center') {\n                                xPos = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                                labelPath.setAttribute('x', xPos.toString());\n                            }\n                        }\n                    }\n                }\n                else if (progress.type === 'Circular') {\n                    if (labelText === '') {\n                        labelPath.setAttribute('visibility', 'visible');\n                        value = effect(args.timeStamp, start, end, args.duration, false);\n                        valueChanged = parseInt((((value - start) / progress.totalAngle) * percentage).toString(), 10);\n                        labelPath.innerHTML = valueChanged.toString() + '%';\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                if (labelText === '') {\n                    labelPath.innerHTML = text;\n                    labelPath.setAttribute('x', posX.toString());\n                }\n                else {\n                    label.animate(labelPath, {\n                        progress: function (args) {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, 0, 1, args.duration, false);\n                            labelPath.setAttribute('opacity', value.toString());\n                        },\n                        end: function () {\n                            labelPath.setAttribute('opacity', '1');\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /** To do the annotation animation for circular progress bar */\n    ProgressAnimation.prototype.doAnnotationAnimation = function (circularPath, progress, previousEnd, previousTotal) {\n        var animation = new Animation({});\n        var value = 0;\n        var percentage = 100;\n        var isAnnotation = progress.annotations.length > 0;\n        var annotatElementChanged;\n        var firstAnnotatElement;\n        var start = progress.startAngle;\n        var totalAngle = progress.totalAngle;\n        var totalEnd;\n        var annotateValueChanged;\n        var annotateValue;\n        var startValue;\n        var endValue;\n        if (isAnnotation && progress.progressAnnotationModule) {\n            firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n            if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n                if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                    annotatElementChanged = firstAnnotatElement.children[0];\n                }\n            }\n        }\n        totalEnd = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n        progress.annotateTotal = totalEnd =\n            (progress.argsData.value < progress.minimum || progress.argsData.value > progress.maximum) ? 0 : totalEnd;\n        progress.annotateEnd = start + totalEnd;\n        annotateValue = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        annotateValue = (progress.argsData.value < progress.minimum || progress.argsData.value > progress.maximum) ? 0 :\n            Math.round(annotateValue);\n        startValue = (!isNullOrUndefined(previousEnd)) ? previousEnd : start;\n        endValue = (!isNullOrUndefined(previousEnd)) ? totalEnd - previousTotal : totalEnd;\n        if (progress.argsData.value <= progress.minimum || progress.argsData.value > progress.maximum) {\n            annotatElementChanged.innerHTML = annotateValue + '%';\n        }\n        else {\n            animation.animate(circularPath, {\n                duration: progress.animation.duration,\n                delay: progress.animation.delay,\n                progress: function (args) {\n                    progress.cancelResize = true;\n                    if (isAnnotation && annotatElementChanged) {\n                        value = effect(args.timeStamp, startValue, endValue, args.duration, false);\n                        annotateValueChanged = parseInt((((Math.round(value) - start) / totalAngle) * percentage).toString(), 10);\n                        annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '0%';\n                    }\n                },\n                end: function (model) {\n                    progress.cancelResize = false;\n                    annotatElementChanged.innerHTML = annotateValue + '%';\n                }\n            });\n        }\n    };\n    ProgressAnimation.prototype.activeAnimate = function (t, start, end, enableRtl) {\n        var time = 1 - Math.pow(1 - t, 3);\n        var attrValue = start + ((!enableRtl) ? (time * end) : -(time * end));\n        return attrValue;\n    };\n    return ProgressAnimation;\n}());\nexport { ProgressAnimation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\nimport { ProgressAnimation } from '../utils/progress-animation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for ProgressBar annotation\n     * @private\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.animation = new ProgressAnimation();\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for ProgressBar\n     * @param element\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n        if (this.progress.animation.enable && !this.progress.isIndeterminate) {\n            this.animation.doAnnotationAnimation(this.progress.clipPath, this.progress);\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function (control) {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","import { lineCapRadius, completeAngle } from '../model/constant';\nimport { getPathArc, degreeToLocation } from '../utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * Progressbar Segment\n */\nvar Segment = /** @class */ (function () {\n    function Segment() {\n    }\n    /** To render the linear segment */\n    Segment.prototype.createLinearSegment = function (progress, id, width, opacity, thickness, progressWidth) {\n        var locX = (progress.enableRtl) ? ((progress.cornerRadius === 'Round') ?\n            (progress.progressRect.x + progress.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (progress.progressRect.x + progress.progressRect.width)) :\n            ((progress.cornerRadius === 'Round') ? (progress.progressRect.x + (lineCapRadius / 2) * thickness) : progress.progressRect.x);\n        var locY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var avlWidth = progressWidth / progress.segmentCount;\n        var avlSegWidth = (progressWidth - ((progress.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((progress.cornerRadius === 'Round') ? progress.segmentCount * (lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var gap = (progress.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (progress.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth, progress.enableRtl));\n            segmentPath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (progress.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.getLinearSegmentPath = function (x, y, width, enableRtl) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((enableRtl) ? -width : width)) + ' ' + y;\n    };\n    /** To render the circular segment */\n    Segment.prototype.createCircularSegment = function (progress, id, x, y, r, value, opacity, thickness, totalAngle, progressWidth) {\n        var start = progress.startAngle;\n        var end = this.widthToAngle(progress.minimum, progress.maximum, value, progress.totalAngle);\n        end -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var size = (progressWidth - ((progress.totalAngle === completeAngle) ? progress.segmentCount :\n            progress.segmentCount - 1) * (progress.gapWidth || progress.themeStyle.circularGapWidth));\n        size = (size -\n            ((progress.cornerRadius === 'Round') ?\n                (((progress.totalAngle === completeAngle) ?\n                    progress.segmentCount : progress.segmentCount - 1) * lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, progressWidth, (progressWidth / progress.segmentCount), totalAngle);\n        avlTolEnd -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var avlEnd = this.widthToAngle(0, progressWidth, size, totalAngle);\n        var gap = this.widthToAngle(0, progressWidth, (progress.gapWidth || progress.themeStyle.circularGapWidth), totalAngle);\n        gap += (progress.cornerRadius === 'Round') ? this.widthToAngle(0, progressWidth, (lineCapRadius * thickness), totalAngle) : 0;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((progress.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = progress.progressThickness || progress.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (progress.enableRtl) ? ((progress.startAngle - end > avlSegEnd) ? progress.startAngle - end : avlSegEnd) :\n                ((progress.startAngle + end < avlSegEnd) ? progress.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, progress.enableRtl);\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((progress.enableRtl) ? -gap : gap);\n            avlSegEnd += (progress.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.widthToAngle = function (min, max, value, totalAngle) {\n        var angle = ((value - min) / (max - min)) * totalAngle;\n        return angle;\n    };\n    Segment.prototype.createLinearRange = function (totalWidth, progress) {\n        var posX = progress.progressRect.x + ((progress.enableRtl) ? progress.progressRect.width : 0);\n        var startY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var gradX = (progress.enableRtl) ? 0.1 : -0.1;\n        var gradient;\n        var validRange;\n        var rangePath;\n        var option;\n        var startPos;\n        var endPos;\n        var startX;\n        var endX;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            validRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startPos = totalWidth * progress.calculateProgressRange(range[i].start, rangeMin, rangeMax);\n            endPos = totalWidth * progress.calculateProgressRange(range[i].end, rangeMin, rangeMax);\n            startX = posX + ((progress.enableRtl) ? -startPos : startPos);\n            endX = posX + ((progress.enableRtl) ? -endPos : endPos);\n            startX = (validRange) ? ((progress.isGradient && i > 0) ? startX + gradX : startX) : posX;\n            endX = (validRange) ? endX : posX;\n            color = (progress.isGradient) ? 'url(#lineRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_LinearRange_' + i, 'none', thickness, color, opacity, '0', 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + endX + ' ' + startY);\n            rangePath = progress.renderer.drawPath(option);\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setLinearGradientColor(i, range[i].color, endColor, startX, endX, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.createCircularRange = function (centerX, centerY, radius, progress) {\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var start = progress.startAngle;\n        var tolAngle = this.widthToAngle(progress.minimum, progress.maximum, progress.value, progress.totalAngle);\n        var gradient;\n        var startAngle;\n        var endAngle;\n        var rangePath;\n        var isValidRange;\n        var option;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            isValidRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startAngle = this.widthToAngle(rangeMin, rangeMax, range[i].start, tolAngle);\n            endAngle = this.widthToAngle(rangeMin, rangeMax, range[i].end, tolAngle);\n            startAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -startAngle : startAngle)) % 360 : start;\n            endAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -endAngle : endAngle)) % 360 : start;\n            color = (progress.isGradient) ? 'url(#circleRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_CircularRange_' + i, 'none', thickness, color, opacity, '0', getPathArc(centerX, centerY, radius, startAngle, endAngle, progress.enableRtl));\n            rangePath = progress.renderer.drawPath(option);\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setCircularGradientColor(i, range[i].color, endColor, startAngle, endAngle, radius, centerX, centerY, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.setLinearGradientColor = function (id, startColor, endColor, start, end, progress) {\n        var linearGradient;\n        var option;\n        var stopColor = [];\n        option = { id: 'lineRangeGrad_' + id + '', x1: start.toString(), x2: end.toString() };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    Segment.prototype.setCircularGradientColor = function (id, startColor, endColor, start, end, rad, x, y, progress) {\n        var linearGradient;\n        var option;\n        var stopColor = [];\n        var pos1 = degreeToLocation(x, y, rad, start);\n        var pos2 = degreeToLocation(x, y, rad, end);\n        option = {\n            id: 'circleRangeGrad_' + id + '', x1: pos1.x.toString(), x2: pos2.x.toString(),\n            y1: pos1.y.toString(), y2: pos2.y.toString()\n        };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    return Segment;\n}());\nexport { Segment };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { TextOption, colorNameToHex, convertHexToColor, setAttributes } from '../utils/helper';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { Segment } from './segment-progress';\nimport { svgLink, gradientType, stopElement } from '../model/constant';\n/**\n * Progress Bar of type Linear\n */\nvar Linear = /** @class */ (function () {\n    function Linear(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /** To render the linear track  */\n    Linear.prototype.renderLinearTrack = function () {\n        var progress = this.progress;\n        var linearTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearTrackGroup' });\n        var linearTrack;\n        var option;\n        var thickness;\n        var stroke;\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        thickness = (progress.trackThickness || progress.themeStyle.linearTrackThickness);\n        stroke = (progress.argsData.trackColor || progress.themeStyle.linearTrackColor);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearTrack = this.createRoundCornerSegment('_LinearTrack_', stroke, thickness, true, 0, progress);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Lineartrack', stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, progress.progressRect.width, thickness, 4, ''));\n                linearTrack = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Lineartrack', 'none', thickness, stroke, progress.themeStyle.trackOpacity, '0', progress.getPathLine(progress.progressRect.x, progress.progressRect.width, thickness));\n            linearTrack = progress.renderer.drawPath(option);\n            progress.trackWidth = linearTrack.getTotalLength();\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            if (progress.segmentCount > 1 && !this.isRange && !progress.enableProgressSegments) {\n                progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, thickness);\n                linearTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n        }\n        linearTrackGroup.appendChild(linearTrack);\n        progress.svgObject.appendChild(linearTrackGroup);\n    };\n    /** To render the linear progress  */\n    // tslint:disable-next-line:max-func-body-length\n    Linear.prototype.renderLinearProgress = function (refresh, previousWidth) {\n        if (previousWidth === void 0) { previousWidth = 0; }\n        var progress = this.progress;\n        var option;\n        var linearProgress;\n        var progressWidth;\n        var linearProgressWidth;\n        var clipPathLinear;\n        var clipPathIndeterminate;\n        var linearProgressGroup;\n        var animationdelay;\n        var thickness;\n        var stroke;\n        var segmentWidth;\n        var strippedStroke;\n        var ismaximum = (progress.value === progress.maximum);\n        progressWidth = progress.calculateProgressRange(progress.argsData.value);\n        progress.previousWidth = linearProgressWidth = progress.progressRect.width *\n            ((progress.isIndeterminate && !progress.enableProgressSegments) ? 1 : progressWidth);\n        if (!refresh) {\n            linearProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearProgressGroup' });\n        }\n        else {\n            linearProgressGroup = getElement(progress.element.id + '_LinearProgressGroup');\n        }\n        thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        stroke = (!progress.isStriped) ? this.checkingLinearProgressColor() : 'url(#' + progress.element.id + '_LinearStriped)';\n        if (progress.cornerRadius === 'Round4px') {\n            option = new PathOption(progress.element.id + '_Linearprogress', stroke, 0, 'none', progress.themeStyle.progressOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, (ismaximum || progress.isIndeterminate) ? '' : 'start'));\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearprogress', 'none', thickness, stroke, progress.themeStyle.progressOpacity, '0', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n        }\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = (!progress.enableProgressSegments) ? progress.segmentSize :\n            progress.calculateSegmentSize(progress.progressWidth, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderLinearBuffer(progress);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.cornerRadius === 'Round4px') {\n                if (progress.segmentCount > 1) {\n                    linearProgress = this.createRoundCornerSegment('_Linearprogress_', stroke, thickness, false, linearProgressWidth, progress, progress.themeStyle.progressOpacity);\n                }\n                else {\n                    linearProgress = progress.renderer.drawPath(option);\n                }\n            }\n            else {\n                if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                    segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                    linearProgress = this.segment.createLinearSegment(progress, '_LinearProgressSegment', linearProgressWidth, progress.themeStyle.progressOpacity, thickness, segmentWidth);\n                }\n                else if (this.isRange && !progress.isIndeterminate) {\n                    linearProgress = this.segment.createLinearRange(linearProgressWidth, progress);\n                }\n                else {\n                    if (!refresh) {\n                        linearProgress = progress.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(progress.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                        linearProgress.setAttribute('stroke', stroke);\n                    }\n                    if (progress.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                    }\n                    if (progress.cornerRadius === 'Round' && progressWidth) {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n            }\n            linearProgressGroup.appendChild(linearProgress);\n            if (progress.isStriped && !progress.isIndeterminate) {\n                strippedStroke = this.checkingLinearProgressColor();\n                this.renderLinearStriped(strippedStroke, linearProgressGroup, progress);\n            }\n            if (progress.isActive && !progress.isIndeterminate && !progress.isStriped) {\n                this.renderActiveState(linearProgressGroup, progressWidth, linearProgressWidth, thickness, refresh);\n            }\n            if (progress.animation.enable && !progress.isIndeterminate && !progress.isActive && !progress.isStriped) {\n                if ((progress.secondaryProgress !== null)) {\n                    animationdelay = progress.animation.delay + (this.bufferWidth - linearProgressWidth);\n                }\n                else {\n                    animationdelay = progress.animation.delay;\n                }\n                this.delay = animationdelay;\n                clipPathLinear = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearAnimation(clipPathLinear, progress, animationdelay, refresh ? previousWidth : 0);\n            }\n            if (progress.isIndeterminate) {\n                clipPathIndeterminate = progress.createClipPath(progress.clipPath, (progress.enableProgressSegments) ? 1 : progressWidth, null, refresh, thickness, progress.enableProgressSegments);\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearIndeterminate(((!progress.enableProgressSegments) ? clipPathIndeterminate : linearProgress), linearProgressWidth, thickness, progress, clipPathIndeterminate);\n            }\n            progress.svgObject.appendChild(linearProgressGroup);\n        }\n    };\n    /** To render the linear buffer */\n    Linear.prototype.renderLinearBuffer = function (progress) {\n        var linearBuffer;\n        var secondaryProgressWidth;\n        var clipPathBuffer;\n        var linearBufferGroup;\n        var linearBufferWidth;\n        var option;\n        var thickness;\n        var stroke;\n        var segmentWidth;\n        var ismaximum = (progress.secondaryProgress === progress.maximum);\n        secondaryProgressWidth = progress.calculateProgressRange(progress.secondaryProgress);\n        this.bufferWidth = linearBufferWidth = progress.progressRect.width * secondaryProgressWidth;\n        linearBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearBufferGroup' });\n        thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        stroke = this.checkingLinearProgressColor();\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearBuffer = this.createRoundCornerSegment('_Linearbuffer_', stroke, thickness, false, linearBufferWidth, progress, progress.themeStyle.bufferOpacity);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Linearbuffer', stroke, 0, 'none', progress.themeStyle.bufferOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearBufferWidth, thickness, 4, (ismaximum) ? '' : 'start'));\n                linearBuffer = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearbuffer', 'none', thickness, stroke, progress.themeStyle.bufferOpacity, '0', progress.getPathLine(progress.progressRect.x, linearBufferWidth, thickness));\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                linearBuffer = this.segment.createLinearSegment(progress, '_LinearBufferSegment', linearBufferWidth, progress.themeStyle.bufferOpacity, (progress.progressThickness || progress.themeStyle.linearProgressThickness), segmentWidth);\n            }\n            else {\n                linearBuffer = progress.renderer.drawPath(option);\n                if (progress.segmentCount > 1 && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-linecap', 'round');\n                }\n            }\n        }\n        linearBufferGroup.appendChild(linearBuffer);\n        if (progress.animation.enable) {\n            clipPathBuffer = progress.createClipPath(progress.bufferClipPath, secondaryProgressWidth, null, false, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n            linearBufferGroup.appendChild(progress.bufferClipPath);\n            linearBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doLinearAnimation(clipPathBuffer, progress, progress.animation.delay, 0);\n        }\n        progress.svgObject.appendChild(linearBufferGroup);\n    };\n    /** Render the Linear Label */\n    //tslint:disable-next-line:max-func-body-length\n    Linear.prototype.renderLinearLabel = function () {\n        var linearlabel;\n        var linearValue;\n        var posX;\n        var posY;\n        var argsData;\n        var textSize;\n        var labelValue;\n        var percentage = 100;\n        var option;\n        var defaultPos;\n        var far;\n        var center;\n        var pos;\n        var rgbValue;\n        var contrast;\n        var clipPath;\n        var linearLabelGroup;\n        var thickness = (this.progress.progressThickness || this.progress.themeStyle.linearProgressThickness);\n        var padding = 5;\n        var progress = this.progress;\n        var textAlignment = progress.labelStyle.textAlignment;\n        var labelText = progress.labelStyle.text;\n        var fontBackground = this.checkingLinearProgressColor();\n        var progressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value);\n        linearLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearLabelGroup' });\n        labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        linearValue = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : Math.round(labelValue);\n        // Checking the font color\n        rgbValue = convertHexToColor(colorNameToHex(fontBackground));\n        contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        argsData = {\n            cancel: false, text: labelText ? labelText : String(linearValue) + '%', color: progress.labelStyle.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle);\n            defaultPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - textSize.width / 2) :\n                (progress.progressRect.x + textSize.width / 2);\n            if (progress.labelOnTrack) {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    center = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - progressWidth / 2) :\n                        (progress.progressRect.x + progressWidth / 2);\n                    pos = (progress.enableRtl) ? (center <= defaultPos) : (center >= defaultPos);\n                    if (pos) {\n                        posX = center;\n                    }\n                    else {\n                        posX = defaultPos;\n                    }\n                }\n                else {\n                    far = (progress.enableRtl) ?\n                        ((progress.progressRect.x + progress.progressRect.width - progressWidth) + textSize.width / 2) :\n                        (progress.progressRect.x + progressWidth - textSize.width / 2);\n                    far += (progress.enableRtl) ? padding : -padding;\n                    pos = (progress.enableRtl) ? (far <= defaultPos) : (far >= defaultPos);\n                    if (pos) {\n                        posX = far;\n                    }\n                    else {\n                        posX = defaultPos;\n                    }\n                }\n            }\n            else {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    posX = (progress.progressRect.x + progress.progressRect.width) / 2;\n                }\n                else {\n                    posX = (progress.enableRtl) ?\n                        (progress.progressRect.x + textSize.width / 2) :\n                        (progress.progressRect.x + progress.progressRect.width - textSize.width / 2);\n                    posX += (progress.enableRtl) ? padding : -padding;\n                }\n            }\n            if (this.progress.cornerRadius === 'Round4px') {\n                posY = progress.progressRect.y + (thickness / 2) + (textSize.height / 4);\n            }\n            else {\n                posY = progress.progressRect.y + (progress.progressRect.height / 2) + (textSize.height / 4);\n            }\n            option = new TextOption(progress.element.id + '_linearLabel', progress.labelStyle.size || progress.themeStyle.linearFontSize, progress.labelStyle.fontStyle || progress.themeStyle.linearFontStyle, progress.labelStyle.fontFamily || progress.themeStyle.linearFontFamily, progress.labelStyle.fontWeight, 'middle', argsData.color || ((contrast >= 128) ? 'black' : 'white'), posX, posY);\n            linearlabel = progress.renderer.createText(option, argsData.text);\n            linearLabelGroup.appendChild(linearlabel);\n            if (progress.animation.enable && !progress.isIndeterminate) {\n                clipPath = progress.renderer.createClipPath({ 'id': progress.element.id + '_clippathLabel' });\n                progress.createClipPath(clipPath, 1, null, false, (progress.progressThickness || progress.themeStyle.linearProgressThickness), true);\n                linearLabelGroup.appendChild(clipPath);\n                linearlabel.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathLabel)');\n                this.animation.doLabelAnimation(linearlabel, 0, progressWidth, progress, this.delay, textSize.width);\n            }\n            progress.svgObject.appendChild(linearLabelGroup);\n        }\n    };\n    /** To render a progressbar active state */\n    Linear.prototype.renderActiveState = function (progressGroup, progressWidth, linearProgressWidth, thickness, refresh) {\n        var linearActive;\n        var activeClip;\n        var progress = this.progress;\n        var option;\n        var ismaximum = (progress.value === progress.maximum);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearActive = this.createRoundCornerSegment('_LinearActiveProgress_', '#ffffff', thickness, false, linearProgressWidth, progress, 0.5);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', '#ffffff', 0, 'none', 0.5, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, ismaximum ? '' : 'start'));\n                linearActive = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', 'none', thickness, '#ffffff', 0.5, '', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                linearActive = progress.renderer.drawPath(option);\n            }\n            else {\n                linearActive = getElement(progress.element.id + '_LinearActiveProgress');\n                linearActive.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n            }\n            if (progress.segmentCount > 1 && !this.isRange) {\n                linearActive.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && progressWidth && !this.isRange) {\n                linearActive.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        activeClip = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false);\n        linearActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(linearActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doLinearAnimation(activeClip, progress, 0, 0, linearActive);\n    };\n    /** To render a striped stroke */\n    Linear.prototype.renderLinearStriped = function (color, group, progress) {\n        var defs = progress.renderer.createDefs();\n        var linearGradient = document.createElementNS(svgLink, gradientType);\n        var stripWidth = 14;\n        var stop;\n        var gradOption;\n        var stopOption = [];\n        gradOption = {\n            id: progress.element.id + '_LinearStriped', x1: (progress.progressRect.x).toString(),\n            x2: (progress.progressRect.x + stripWidth).toString(),\n            spreadMethod: 'repeat', gradientUnits: 'userSpaceOnUse', gradientTransform: 'rotate(-45)'\n        };\n        stopOption = [{ offset: '50%', 'stop-color': color, 'stop-opacity': '1' },\n            { offset: '50%', 'stop-color': color, 'stop-opacity': '0.4' }];\n        linearGradient = setAttributes(gradOption, linearGradient);\n        for (var i = 0; i < stopOption.length; i++) {\n            stop = document.createElementNS(svgLink, stopElement);\n            stop = setAttributes(stopOption[i], stop);\n            linearGradient.appendChild(stop);\n        }\n        defs.appendChild(linearGradient);\n        group.appendChild(defs);\n        if (progress.animation.enable) {\n            this.animation.doStripedAnimation(linearGradient, progress, 0);\n        }\n    };\n    /** checking progress color */\n    Linear.prototype.checkingLinearProgressColor = function () {\n        var linearColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                linearColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                linearColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                linearColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                linearColor = progress.themeStyle.danger;\n                break;\n            default:\n                linearColor = (progress.argsData.progressColor || progress.themeStyle.linearProgressColor);\n        }\n        return linearColor;\n    };\n    /** Bootstrap 3 & Bootstrap 4 corner path */\n    Linear.prototype.cornerRadius = function (x, y, width, height, radius, pathtype) {\n        var path = '';\n        var endWidth = width;\n        var endRadius = radius;\n        switch (pathtype) {\n            case 'start':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n                break;\n            case 'end':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (endWidth - endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + endRadius + ',' + endRadius + ' '\n                    + 'v' + (height - 2 * endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + -endRadius + ',' + endRadius + ' '\n                    + 'h' + (radius - endWidth) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            case 'none':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            default:\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width - radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + ' '\n                    + 'v' + (height - 2 * radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + ' '\n                    + 'h' + (radius - width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n        }\n        return path;\n    };\n    /** Bootstrap 3 & Bootstrap 4 corner segment */\n    Linear.prototype.createRoundCornerSegment = function (id, stroke, thickness, isTrack, progressWidth, progress, opacity) {\n        var locX = progress.progressRect.x;\n        var locY = progress.progressRect.y;\n        var width = progress.progressRect.width;\n        var option;\n        var pathType;\n        var avlWidth;\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var segWidth = (width - ((progress.segmentCount - 1) * gapWidth)) / progress.segmentCount;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id + 'SegmentGroup' });\n        var segmentPath;\n        for (var i = 1; i <= progress.segmentCount; i++) {\n            if (i === 1 || i === progress.segmentCount) {\n                pathType = (i === 1) ? 'start' : 'end';\n            }\n            else {\n                pathType = 'none';\n            }\n            if (isTrack) {\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(locX, locY, segWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n            }\n            else {\n                avlWidth = (progressWidth < segWidth) ? progressWidth : segWidth;\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', opacity, '0', this.cornerRadius(locX, locY, avlWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n                progressWidth -= (segWidth + gapWidth);\n                if (progressWidth <= 0) {\n                    break;\n                }\n            }\n        }\n        return segmentGroup;\n    };\n    return Linear;\n}());\nexport { Linear };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getPathArc } from '../utils/helper';\nimport { Segment } from './segment-progress';\nimport { TextOption } from '../utils/helper';\n/**\n * Progressbar of type circular\n */\nvar Circular = /** @class */ (function () {\n    function Circular(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /** To render the circular track */\n    Circular.prototype.renderCircularTrack = function () {\n        var progress = this.progress;\n        var circularTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularTrackGroup' });\n        var radius;\n        var startAngle;\n        var endAngle;\n        var circularTrack;\n        var circularPath;\n        var option;\n        var fill;\n        var strokeWidth;\n        var stroke;\n        startAngle = progress.startAngle;\n        progress.totalAngle = (progress.endAngle - progress.startAngle) % 360;\n        progress.totalAngle = (progress.totalAngle <= 0 ? (360 + progress.totalAngle) : progress.totalAngle);\n        progress.totalAngle -= (progress.totalAngle === 360) ? 0.01 : 0;\n        this.trackEndAngle = endAngle = (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : +progress.totalAngle)) % 360;\n        this.centerX = progress.progressRect.x + (progress.progressRect.width / 2);\n        this.centerY = progress.progressRect.y + (progress.progressRect.height / 2);\n        this.maxThickness = Math.max(progress.trackThickness, progress.progressThickness) ||\n            Math.max(progress.themeStyle.circularProgressThickness, progress.themeStyle.circularTrackThickness);\n        this.availableSize = (Math.min(progress.progressRect.height, progress.progressRect.width) / 2) - this.maxThickness / 2;\n        radius = stringToNumber(progress.radius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        stroke = (progress.argsData.trackColor || progress.themeStyle.circularTrackColor);\n        fill = (progress.enablePieProgress) ? (progress.argsData.trackColor || progress.themeStyle.circularTrackColor) : 'none';\n        strokeWidth = (progress.enablePieProgress) ? 0 : (progress.trackThickness || progress.themeStyle.circularTrackThickness);\n        circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        option = new PathOption(progress.element.id + '_Circulartrack', fill, strokeWidth, stroke, progress.themeStyle.trackOpacity, '0', circularPath);\n        circularTrack = progress.renderer.drawPath(option);\n        progress.trackWidth = circularTrack.getTotalLength();\n        if (progress.segmentCount > 1 && !progress.enableProgressSegments && !progress.enablePieProgress && !this.isRange) {\n            progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, strokeWidth);\n            circularTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round' && !progress.enablePieProgress && !this.isRange) {\n            circularTrack.setAttribute('stroke-linecap', 'round');\n        }\n        circularTrackGroup.appendChild(circularTrack);\n        progress.svgObject.appendChild(circularTrackGroup);\n    };\n    /** To render the circular progress */\n    Circular.prototype.renderCircularProgress = function (previousEnd, previousTotalEnd, refresh) {\n        var progress = this.progress;\n        var startAngle = progress.startAngle;\n        var endAngle;\n        var totalAngle;\n        var radius;\n        var previousPath;\n        var progressTotalAngle;\n        var circularPath;\n        var progressEnd;\n        var circularProgress;\n        var option;\n        var linearClipPath;\n        var stroke;\n        var circularProgressGroup;\n        var fill;\n        var strokeWidth;\n        var segmentWidth;\n        var progressEndAngle;\n        var thickness;\n        if (!refresh) {\n            circularProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularProgressGroup' });\n        }\n        else {\n            circularProgressGroup = getElement(progress.element.id + '_CircularProgressGroup');\n        }\n        radius = stringToNumber(progress.innerRadius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        progress.previousTotalEnd = progressEnd = progress.calculateProgressRange(progress.argsData.value);\n        progressEndAngle = (progress.startAngle + ((progress.enableRtl) ? -progressEnd : progressEnd)) % 360;\n        progress.previousEndAngle = endAngle = ((progress.isIndeterminate && !progress.enableProgressSegments) ? (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : progress.totalAngle)) % 360 : progressEndAngle);\n        progressTotalAngle = (progressEnd - progress.startAngle) % 360;\n        progressTotalAngle = (progressTotalAngle <= 0 ? (360 + progressTotalAngle) : progressTotalAngle);\n        progressTotalAngle -= (progressTotalAngle === 360) ? 0.01 : 0;\n        circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        stroke = this.checkingCircularProgressColor();\n        fill = (progress.enablePieProgress) ? stroke : 'none';\n        thickness = (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        strokeWidth = (progress.enablePieProgress) ? 0 : thickness;\n        option = new PathOption(progress.element.id + '_Circularprogress', fill, strokeWidth, stroke, progress.themeStyle.progressOpacity, '0', circularPath);\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = this.validateSegmentSize(progress, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderCircularBuffer(progress, radius, progressTotalAngle);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress) {\n                totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                circularProgress = this.segment.createCircularSegment(progress, '_CircularProgressSegment', this.centerX, this.centerY, radius, progress.argsData.value, progress.themeStyle.progressOpacity, thickness, totalAngle, segmentWidth);\n            }\n            else if (this.isRange && !progress.isIndeterminate) {\n                circularProgress = this.segment.createCircularRange(this.centerX, this.centerY, radius, progress);\n            }\n            else {\n                if (!refresh) {\n                    circularProgress = progress.renderer.drawPath(option);\n                }\n                else {\n                    circularProgress = getElement(progress.element.id + '_Circularprogress');\n                    previousPath = circularProgress.getAttribute('d');\n                    circularProgress.setAttribute('stroke', stroke);\n                    circularProgress.setAttribute('d', circularPath);\n                }\n                if (progress.segmentCount > 1 && !progress.enablePieProgress) {\n                    circularProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                    circularProgress.setAttribute('stroke-linecap', 'round');\n                }\n            }\n            circularProgressGroup.appendChild(circularProgress);\n            if (progress.isActive && !progress.isIndeterminate && !progress.enablePieProgress) {\n                this.renderActiveState(circularProgressGroup, radius, strokeWidth, circularPath, progressEndAngle, progressEnd, refresh);\n            }\n            if (progress.animation.enable || progress.isIndeterminate) {\n                this.delay = (progress.secondaryProgress !== null) ? 300 : progress.animation.delay;\n                linearClipPath = progress.createClipPath(progress.clipPath, null, refresh ? previousPath : '', refresh);\n                circularProgressGroup.appendChild(progress.clipPath);\n                if (progress.animation.enable && !progress.isIndeterminate && !progress.isActive) {\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularAnimation(this.centerX, this.centerY, radius, progressEndAngle, progressEnd, linearClipPath, progress, thickness, this.delay, refresh ? previousEnd : null, refresh ? previousTotalEnd : null);\n                }\n                if (progress.isIndeterminate) {\n                    if (progress.enableProgressSegments) {\n                        linearClipPath.setAttribute('d', getPathArc(this.centerX, this.centerY, radius + (thickness / 2), progress.startAngle, this.trackEndAngle, progress.enableRtl, true));\n                    }\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularIndeterminate((!progress.enableProgressSegments) ? linearClipPath : circularProgress, progress, startAngle, progressEndAngle, this.centerX, this.centerY, radius, thickness, linearClipPath);\n                }\n            }\n            progress.svgObject.appendChild(circularProgressGroup);\n        }\n    };\n    /** To render the circular buffer */\n    Circular.prototype.renderCircularBuffer = function (progress, radius, progressTotalAngle) {\n        var bufferClipPath;\n        var bufferEnd;\n        var circularBuffer;\n        var circularBufferGroup;\n        var circularPath;\n        var option;\n        var fill;\n        var strokeWidth;\n        var segmentWidth;\n        var totalAngle;\n        var endAngle;\n        var stroke;\n        circularBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_ CircularBufferGroup' });\n        bufferEnd = progress.calculateProgressRange(progress.secondaryProgress);\n        endAngle = (progress.startAngle + ((progress.enableRtl) ? -bufferEnd : bufferEnd)) % 360;\n        circularPath = getPathArc(this.centerX, this.centerY, radius, progress.startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        stroke = this.checkingCircularProgressColor();\n        fill = (progress.enablePieProgress) ? stroke : 'none';\n        strokeWidth = (progress.enablePieProgress) ? 0 : (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        option = new PathOption(progress.element.id + '_Circularbuffer', fill, strokeWidth, stroke, progress.themeStyle.bufferOpacity, '0', circularPath);\n        if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress && !this.isRange) {\n            totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n            segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n            circularBuffer = this.segment.createCircularSegment(progress, '_CircularBufferSegment', this.centerX, this.centerY, radius, progress.secondaryProgress, progress.themeStyle.bufferOpacity, strokeWidth, totalAngle, segmentWidth);\n        }\n        else {\n            circularBuffer = progress.renderer.drawPath(option);\n            if (progress.segmentCount > 1 && !progress.enablePieProgress && !this.isRange) {\n                circularBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                circularBuffer.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        circularBufferGroup.appendChild(circularBuffer);\n        if (progress.animation.enable && !progress.isActive) {\n            bufferClipPath = progress.createClipPath(progress.bufferClipPath, null, '', false);\n            circularBufferGroup.appendChild(progress.bufferClipPath);\n            circularBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, bufferEnd, bufferClipPath, progress, (progress.progressThickness || progress.themeStyle.circularProgressThickness), progress.animation.delay);\n        }\n        progress.svgObject.appendChild(circularBufferGroup);\n    };\n    /** To render the circular Label */\n    Circular.prototype.renderCircularLabel = function () {\n        var end;\n        var circularLabel;\n        var circularValue;\n        var centerY;\n        var argsData;\n        var textSize;\n        var labelValue;\n        var option;\n        var circularLabelGroup;\n        var percentage = 100;\n        var progress = this.progress;\n        var labelText = progress.labelStyle.text;\n        circularLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularLabelGroup' });\n        if (document.getElementById(circularLabelGroup.id)) {\n            document.getElementById(circularLabelGroup.id).remove();\n        }\n        labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        circularValue = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : Math.round(labelValue);\n        argsData = {\n            cancel: false, text: labelText ? labelText : String(circularValue) + '%', color: progress.labelStyle.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle);\n            centerY = this.centerY + (textSize.height / 2);\n            option = new TextOption(progress.element.id + '_circularLabel', progress.labelStyle.size || progress.themeStyle.circularFontSize, progress.labelStyle.fontStyle || progress.themeStyle.circularFontStyle, progress.labelStyle.fontFamily || progress.themeStyle.circularFontFamily, progress.labelStyle.fontWeight, 'middle', argsData.color || progress.themeStyle.fontColor, this.centerX, centerY, progress.progressRect.width, progress.progressRect.height);\n            circularLabel = progress.renderer.createText(option, argsData.text);\n            circularLabelGroup.appendChild(circularLabel);\n            if (progress.animation.enable && !progress.isIndeterminate) {\n                end = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n                end = (progress.value < progress.minimum || progress.value > progress.maximum) ? 0 : end;\n                this.animation.doLabelAnimation(circularLabel, progress.startAngle, end, progress, this.delay);\n            }\n            progress.svgObject.appendChild(circularLabelGroup);\n        }\n    };\n    /** To render a progressbar active state */\n    Circular.prototype.renderActiveState = function (progressGroup, radius, strokeWidth, circularPath, endAngle, totalEnd, refresh) {\n        var circularActive;\n        var activeClip;\n        var option;\n        var progress = this.progress;\n        var thickness = strokeWidth + 1;\n        if (!refresh) {\n            option = new PathOption(progress.element.id + '_CircularActiveProgress', 'none', thickness, '#ffffff', 0.5, '0', circularPath);\n            circularActive = progress.renderer.drawPath(option);\n        }\n        else {\n            circularActive = getElement(progress.element.id + '_CircularActiveProgress');\n            circularActive.setAttribute('d', circularPath);\n        }\n        if (progress.segmentCount > 1) {\n            circularActive.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round') {\n            circularActive.setAttribute('stroke-linecap', 'round');\n        }\n        activeClip = progress.createClipPath(progress.clipPath, null, '', refresh);\n        circularActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(circularActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, totalEnd, activeClip, progress, thickness, 0, null, null, circularActive);\n    };\n    /** Checking the segment size */\n    Circular.prototype.validateSegmentSize = function (progress, thickness) {\n        var validSegment;\n        var rDiff;\n        var progressSegment;\n        rDiff = parseInt(progress.radius, 10) - parseInt(progress.innerRadius, 10);\n        if (rDiff !== 0 && !progress.enableProgressSegments) {\n            progressSegment = progress.trackWidth + ((rDiff < 0) ? (progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10) :\n                -(progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10));\n            validSegment = progress.calculateSegmentSize(progressSegment, thickness);\n        }\n        else if (progress.enableProgressSegments) {\n            validSegment = progress.calculateSegmentSize(progress.progressWidth, thickness);\n        }\n        else {\n            validSegment = progress.segmentSize;\n        }\n        return validSegment;\n    };\n    /** checking progress color */\n    Circular.prototype.checkingCircularProgressColor = function () {\n        var circularColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                circularColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                circularColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                circularColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                circularColor = progress.themeStyle.danger;\n                break;\n            default:\n                circularColor = (progress.argsData.progressColor || progress.themeStyle.circularProgressColor);\n        }\n        return circularColor;\n    };\n    return Circular;\n}());\nexport { Circular };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection, EventHandler } from '@syncfusion/ej2-base';\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, Size, RectOption, stringToNumber } from './utils/helper';\nimport { Margin, Animation, Font, RangeColor } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { mouseClick, mouseDown, mouseLeave, mouseMove, mouseUp } from './model/constant';\nimport { ProgressAnnotationSettings } from './model/index';\nimport { Linear } from './types/linear-progress';\nimport { Circular } from './types/circular-progress';\nimport { ProgressAnimation } from './utils/progress-animation';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.linear = new Linear(_this);\n        /** @private */\n        _this.circular = new Circular(_this);\n        /** @private */\n        _this.annotateAnimation = new ProgressAnimation();\n        /** @private */\n        _this.destroyIndeterminate = false;\n        return _this;\n    }\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        // tslint:disable-next-line\n        this.isBlazor = window[blazor];\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.wireEvents();\n    };\n    ProgressBar.prototype.initPrivateVariable = function () {\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n    };\n    ProgressBar.prototype.render = function () {\n        var _this = this;\n        this.trigger('load', { progressBar: this.isBlazor ? {} : this });\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.calculateProgressBarSize();\n        this.setTheme();\n        this.createSVG();\n        this.argsData = { value: this.value, progressColor: this.progressColor, trackColor: this.trackColor };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData, function () { _this.controlRendering(); });\n        }\n        else {\n            this.trigger(valueChanged, this.argsData, function () { _this.controlRendering(); });\n        }\n    };\n    ProgressBar.prototype.controlRendering = function () {\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this.isBlazor ? {} : this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * calculate size of the progress bar\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width = this.progressSize.width - (this.margin.left + this.margin.right);\n        this.progressRect.height = this.progressSize.height - (this.margin.top + this.margin.bottom);\n    };\n    /**\n     * Render Annotation\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.createSecElement();\n        this.renderAnnotation();\n        this.setSecondaryElementPosition();\n    };\n    /**\n     * Render SVG Element\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.renderTrack();\n        this.renderProgress();\n        this.renderLabel();\n        this.renderAnnotations();\n    };\n    ProgressBar.prototype.createSecElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute',\n        });\n        this.element.appendChild(this.secElement);\n    };\n    /**\n     * To set the left and top position for annotation for center aligned\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.removeSvg();\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.renderTrack = function () {\n        if (this.type === 'Linear') {\n            this.linear.renderLinearTrack();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularTrack();\n        }\n    };\n    ProgressBar.prototype.renderProgress = function () {\n        this.clipPathElement();\n        if (this.type === 'Linear') {\n            this.linear.renderLinearProgress();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularProgress();\n        }\n    };\n    ProgressBar.prototype.renderLabel = function () {\n        if (this.type === 'Linear' && this.showProgressValue && !this.isIndeterminate) {\n            this.linear.renderLinearLabel();\n        }\n        else if (this.type === 'Circular' && this.showProgressValue && !this.isIndeterminate) {\n            this.circular.renderCircularLabel();\n        }\n        this.element.appendChild(this.svgObject);\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round' && width) ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round' && width) ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (value, minimum, maximum) {\n        var result;\n        var endValue;\n        var min = minimum || this.minimum;\n        var max = maximum || this.maximum;\n        endValue = (value - min) / (max - min) * ((this.type === 'Linear') ? 1 : this.totalAngle);\n        result = (value < min || value > max) ? 0 : endValue;\n        return result;\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, range, d, refresh, thickness, isLabel, isMaximum) {\n        var path;\n        var rect;\n        var option;\n        var posx;\n        var posy;\n        var pathWidth;\n        var x = this.progressRect.x;\n        var totalWidth = this.progressRect.width;\n        if (this.type === 'Linear') {\n            if (this.cornerRadius === 'Round4px') {\n                posx = x;\n                pathWidth = totalWidth * range;\n                posx += (!isLabel) ? (-4) : 0;\n                posy = this.progressRect.y;\n                pathWidth += ((!isLabel && isMaximum) || this.isIndeterminate) ? 4 : 0;\n            }\n            else {\n                posx = (this.enableRtl && !isLabel) ? (x + totalWidth) : x;\n                pathWidth = totalWidth * range;\n                posx += (this.cornerRadius === 'Round' && !isLabel) ?\n                    ((this.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n                posy = (this.progressRect.y + (this.progressRect.height / 2)) - (thickness / 2);\n                pathWidth += (this.cornerRadius === 'Round' && !isLabel) ? (lineCapRadius * thickness) : 0;\n            }\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect', 'transparent', 1, 'transparent', 1, new Rect(posx, posy, thickness, pathWidth));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect');\n                path.setAttribute('width', (pathWidth).toString());\n                if (this.isActive) {\n                    path.setAttribute('x', (posx).toString());\n                }\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    /**\n     * Theming for progress bar\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.cornerRadius = this.cornerRadius === 'Auto' ?\n                    ((this.type === 'Linear') ? 'Round4px' : 'Round') : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * Annotation for progress bar\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     * @return {boolean}\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function (e) {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n            cancel: (this.cancelResize) ? true : false,\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            if ((_this.width === null || _this.height === null) && !arg.cancel) {\n                _this.secElement.innerHTML = '';\n                _this.calculateProgressBarSize();\n                _this.createSVG();\n                _this.renderElements();\n            }\n        }, 500);\n        return false;\n    };\n    ProgressBar.prototype.progressMouseClick = function (e) {\n        this.mouseEvent(mouseClick, e);\n    };\n    ProgressBar.prototype.progressMouseDown = function (e) {\n        this.mouseEvent(mouseDown, e);\n    };\n    ProgressBar.prototype.progressMouseMove = function (e) {\n        this.mouseEvent(mouseMove, e);\n    };\n    ProgressBar.prototype.progressMouseUp = function (e) {\n        this.mouseEvent(mouseUp, e);\n    };\n    ProgressBar.prototype.progressMouseLeave = function (e) {\n        this.mouseEvent(mouseLeave, e);\n    };\n    ProgressBar.prototype.mouseEvent = function (eventName, e) {\n        var element = e.target;\n        this.trigger(eventName, { target: element.id });\n    };\n    /**\n     * Method to un-bind events for progress bar\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, 'click', this.progressMouseClick);\n        EventHandler.remove(this.element, startEvent, this.progressMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.progressMouseMove);\n        EventHandler.remove(this.element, stopEvent, this.progressMouseUp);\n        EventHandler.remove(this.element, cancelEvent, this.progressMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, 'click', this.progressMouseClick, this);\n        EventHandler.add(this.element, startEvent, this.progressMouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.progressMouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.progressMouseUp, this);\n        EventHandler.add(this.element, cancelEvent, this.progressMouseLeave, this);\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    break;\n                case 'value':\n                    this.cancelResize = (this.animation.enable) ? true : false;\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.argsData.progressColor,\n                        trackColor: this.argsData.trackColor\n                    };\n                    if (this.argsData.value < oldProp.value && this.animation.enable) {\n                        this.argsData.value = oldProp.value;\n                    }\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.circular.renderCircularProgress(this.previousEndAngle, this.previousTotalEnd, !isNullOrUndefined(oldProp.value));\n                        if (this.showProgressValue) {\n                            this.circular.renderCircularLabel();\n                        }\n                        if (this.progressAnnotationModule && this.animation.enable && !this.isIndeterminate) {\n                            this.annotateAnimation.doAnnotationAnimation(this.clipPath, this, this.annotateEnd, this.annotateTotal);\n                        }\n                    }\n                    else {\n                        this.linear.renderLinearProgress(!isNullOrUndefined(oldProp.value), this.previousWidth);\n                    }\n                    break;\n                case 'animation':\n                    this.createSVG();\n                    this.renderElements();\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    ProgressBar.prototype.show = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Visible');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = false;\n                if (this.type === 'Linear') {\n                    this.linear.renderLinearProgress(true);\n                }\n                else {\n                    this.circular.renderCircularProgress(null, null, true);\n                }\n            }\n        }\n    };\n    ProgressBar.prototype.hide = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Hidden');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = true;\n            }\n        }\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of ProgressBar\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        // tslint:disable-next-line:no-any\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n        if (!this.refreshing) {\n            this.destroyIndeterminate = true;\n        }\n    };\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isActive\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isGradient\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isStriped\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"role\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(true)\n    ], ProgressBar.prototype, \"labelOnTrack\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enablePieProgress\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableProgressSegments\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: 'Normal', fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([{}], RangeColor)\n    ], ProgressBar.prototype, \"rangeColors\", void 0);\n    ProgressBar = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","/** @private */\n// tslint:disable-next-line:max-func-body-length\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Roboto',\n                linearFontSize: '12',\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Roboto',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#4caf50',\n                danger: '#ff6652',\n                warning: '#ff9800',\n                info: '#03a9f4',\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                success: '#48b14c',\n                danger: '#d44f4f',\n                warning: '#fac168',\n                info: '#2aaac0',\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Helvetica',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                success: '#28a745',\n                danger: '#dc3545',\n                warning: '#ffc107',\n                info: '#17a2b8',\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                fontColor: '#FFFFFF',\n                linearFontFamily: 'Segoe UI',\n                linearFontSize: '12',\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#2bc700',\n                danger: '#ff6161',\n                warning: '#ff7d1a',\n                info: '#66b0ff',\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                fontColor: '#333333',\n                linearFontFamily: 'Segoe UI',\n                linearFontStyle: 'Regular',\n                linearFontSize: '12',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: '20',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                success: '#166600',\n                danger: '#b30900',\n                warning: '#944000',\n                info: '#0056b3',\n            };\n            break;\n    }\n    return style;\n}\n"],"names":["convertToHexCode","value","componentToHex","r","g","b","hex","toString","length","convertHexToColor","result","exec","ColorValue","parseInt","colorNameToHex","color","element","document","body","appendChild","createElement","id","getElementById","style","window","getComputedStyle","remove","isRGBValue","degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","getPathArc","startAngle","endAngle","enableRtl","pieView","start","end","largeArcFlag","sweepFlag","stringToNumber","containerSize","undefined","indexOf","setAttributes","options","keys","Object","i","setAttribute","effect","currentTime","startValue","endValue","duration","getElement","removeElement","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Rect","height","width","Size","Pos","RectOption","_super","fill","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","PathOption","TextOption","fontSize","fontStyle","fontFamily","fontWeight","textAnchor","annotationRender","ProgressLocation","__decorate","decorators","target","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Margin","apply","Property","ChildProperty","Font","Animation","ProgressAnnotationSettings","RangeColor","completeAngle","progressCompleted","svgLink","AnnotationBase","control","render","annotation","index","styles","innerHTML","content","processAnnotation","parentElement","annotationElement","location","setElementStyle","redraw","isReact","clearTemplate","argsData","cancel","name","trigger","Location","annotationRadius","annotationAngle","left","top","renderReactTemplates","angle","radius1","parseFloat","progressRect","round","progressSize","ProgressAnimation","doLinearAnimation","progress","delay","previousWidth","active","animation","linearPath","getAttribute","opacityValue","cornerRadius","rtlX","visibility","animate","args","cancelResize","timeStamp","isActive","activeAnimate","model","trackColor","progressColor","doLinearIndeterminate","progressWidth","thickness","clipPath","enableProgressSegments","getPathLine","destroyIndeterminate","doStripedAnimation","point","doCircularAnimation","progressEnd","totalEnd","previousTotal","startPos","endPos","circularPath","pathRadius","isNullOrUndefined","doCircularIndeterminate","circularProgress","doLabelAnimation","labelPath","textSize","label","text","xPos","valueChanged","labelText","labelStyle","labelPos","textAlignment","posX","type","totalAngle","doAnnotationAnimation","previousEnd","annotatElementChanged","firstAnnotatElement","annotateValueChanged","annotateValue","isAnnotation","annotations","progressAnnotationModule","children","tagName","minimum","maximum","annotateTotal","annotateEnd","t","time","pow","ProgressAnnotation","renderAnnotations","map","enable","isIndeterminate","getModuleName","destroy","Segment","createLinearSegment","locX","locY","gapWidth","themeStyle","linearGapWidth","avlWidth","segmentCount","avlSegWidth","segWidth","option","segmentPath","gap","segmentGroup","renderer","createGroup","count","ceil","j","tolWidth","linearThickness","progressThickness","linearProgressThickness","segmentColor","getLinearSegmentPath","drawPath","createCircularSegment","widthToAngle","size","circularGapWidth","avlTolEnd","avlEnd","circularSegment","segmentEnd","gapCount","floor","avlSegEnd","circularThickness","circularProgressThickness","min","max","createLinearRange","totalWidth","gradient","validRange","rangePath","startX","endX","endColor","startY","rangeGroup","range","rangeColors","progressOpacity","rangeMin","rangeMax","gradX","calculateProgressRange","isGradient","setLinearGradientColor","createCircularRange","isValidRange","tolAngle","setCircularGradientColor","startColor","linearGradient","stopColor","x1","x2","colorStop","drawGradient","firstElementChild","rad","pos1","pos2","y1","y2","Linear","segment","renderLinearTrack","linearTrack","linearTrackGroup","isRange","trackThickness","linearTrackThickness","linearTrackColor","createRoundCornerSegment","trackOpacity","trackWidth","getTotalLength","segmentSize","calculateSegmentSize","svgObject","renderLinearProgress","refresh","linearProgress","linearProgressWidth","clipPathLinear","clipPathIndeterminate","linearProgressGroup","animationdelay","segmentWidth","strippedStroke","ismaximum","isStriped","checkingLinearProgressColor","secondaryProgress","renderLinearBuffer","renderLinearStriped","renderActiveState","bufferWidth","createClipPath","linearBuffer","secondaryProgressWidth","clipPathBuffer","linearBufferGroup","linearBufferWidth","bufferOpacity","bufferClipPath","renderLinearLabel","linearlabel","linearValue","posY","labelValue","defaultPos","far","center","rgbValue","contrast","linearLabelGroup","fontBackground","String","measureText","labelOnTrack","linearFontSize","linearFontStyle","linearFontFamily","createText","progressGroup","linearActive","activeClip","group","stop","defs","createDefs","createElementNS","stopOption","offset","stop-color","stop-opacity","spreadMethod","gradientUnits","gradientTransform","linearColor","role","success","info","warning","danger","linearProgressColor","pathtype","path","isTrack","pathType","Circular","renderCircularTrack","circularTrack","strokeWidth","circularTrackGroup","trackEndAngle","maxThickness","circularTrackThickness","availableSize","circularTrackColor","enablePieProgress","renderCircularProgress","previousTotalEnd","previousPath","progressTotalAngle","linearClipPath","circularProgressGroup","progressEndAngle","innerRadius","previousEndAngle","checkingCircularProgressColor","validateSegmentSize","renderCircularBuffer","bufferEnd","circularBuffer","circularBufferGroup","renderCircularLabel","circularLabel","circularValue","circularLabelGroup","circularFontSize","circularFontStyle","circularFontFamily","fontColor","circularActive","validSegment","rDiff","progressSegment","abs","circularColor","circularProgressColor","ProgressBar","linear","circular","annotateAnimation","preRender","isBlazor","unWireEvents","initPrivateVariable","wireEvents","progressBar","display","position","calculateProgressBarSize","setTheme","createSVG","controlRendering","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","margin","right","bottom","createSecElement","renderAnnotation","setSecondaryElementPosition","renderTrack","renderProgress","renderLabel","secElement","getBoundingClientRect","svgRect","removeSvg","SvgRenderer","createSvg","backgroundColor","clipPathElement","showProgressValue","moveTo","lineTo","cornerCount","isLabel","isMaximum","posx","posy","pathWidth","drawRectangle","theme","getProgressThemeColor","progressResize","e","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","setTimeout","isDestroyed","progressMouseClick","mouseEvent","progressMouseDown","progressMouseMove","progressMouseUp","progressMouseLeave","eventName","startEvent","Browser","touchStartEvent","moveEvent","touchMoveEvent","stopEvent","touchEndEvent","cancelEvent","isPointer","EventHandler","removeEventListener","isTouch","resizeBounds","add","bind","addEventListener","svgElement","onPropertyChanged","newProp","oldProp","_i","_a","requiredModules","modules","some","push","member","getPersistData","show","hide","classList","refreshing","Complex","Event","Collection","NotifyPropertyChanges","Component"],"mappings":"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"}