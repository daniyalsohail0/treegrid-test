{"version":3,"file":"ej2-heatmap.umd.min.js","sources":["../src/heatmap/utils/helper.js","../src/heatmap/model/theme.js","../src/heatmap/model/base.js","../src/heatmap/utils/colorMapping.js","../src/heatmap/axis/axis.js","../src/heatmap/axis/axis-helpers.js","../src/heatmap/series/series.js","../src/heatmap/utils/tooltip.js","../src/heatmap/datasource/twodimensional.js","../src/heatmap/legend/legend.js","../src/heatmap/datasource/adaptor.js","../src/heatmap/utils/export.js","../src/heatmap/heatmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Helper method for heatmap\n */\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle.toLowerCase();\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight.toLowerCase();\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Internal class size for height and width\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Class to define the details of selected cell.\n * @private\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : 'start';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : 'auto';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/** @private */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var box;\n    var options;\n    var htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle.toLowerCase(),\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight.toLowerCase(),\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.x;\n            delete properties.y;\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.labelRotation;\n            delete properties.baseline;\n            delete properties.text;\n            var element = this.heatMap.renderer.createText(properties, text);\n            element.style.fontFamily = properties['font-family'];\n            element.style.fontSize = properties['font-size'];\n            element.style.fontStyle = properties['font-style'];\n            element.style.fontWeight = properties['font-weight'];\n            parentElement.appendChild(element);\n            properties.text = text;\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var text;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight.toLowerCase(),\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        ctx.fillText(label, options.x - translateX, options.y - translateY);\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        var cornerRadius = options.rx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] != 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    ;\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var initialClip = heatmap.initialClipRect;\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/* private*/\n/* Method to get the tool tip text in canvas based on region. */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value, startValue, endValue) {\n        this.visible = visible;\n        this.value = value;\n        this.startValue = startValue;\n        this.endValue = endValue;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/** @private */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","/**\n * Specifies HeatMaps Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.titleFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Configures the fonts in heat map.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the heat map margins.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the borders in the heat map.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the tooltip borders in the heat map.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Configures the mapping name for size and color in SizeAndColor type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * class used to maintain Title styles.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * class used to maintain the fill color value for cell color range\n */\nvar FillColor = /** @class */ (function (_super) {\n    __extends(FillColor, _super);\n    function FillColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"minColor\", void 0);\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"maxColor\", void 0);\n    return FillColor;\n}(ChildProperty));\nexport { FillColor };\n/**\n * class used to maintain palette information.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"endValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"minColor\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"maxColor\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * label border properties.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * categories for multi level labels\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * MultiLevelLabels properties\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label, startValue, endValue, minColor, maxColor) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * class used to maintain color and value collection.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, startValue, endValue, minColor, maxColor, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n/**\n * class used to maintain xAxis labels details for multipleRow label intersect action.\n */\nvar MultipleRow = /** @class */ (function () {\n    function MultipleRow(start, end, index, label, row) {\n        this.index = 1;\n        this.row = 1;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n        this.label = label;\n        this.row = row;\n    }\n    return MultipleRow;\n}());\nexport { MultipleRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection, FillColor } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Configures the color property in Heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    __decorate([\n        Property('Table')\n    ], PaletteSettings.prototype, \"colorGradientMode\", void 0);\n    __decorate([\n        Complex({}, FillColor)\n    ], PaletteSettings.prototype, \"fillColor\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = this.heatMap.isColorRange ? colorMapping[0].startValue : colorMapping[0].value;\n        var nextOffset = 0;\n        var i = 0;\n        var previousColor;\n        var nextColor;\n        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n            for (i = 0; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].endValue);\n                if (value <= offset && value >= Number(colorMapping[i].startValue)) {\n                    nextOffset = offset;\n                    previousColor = this.heatMap.colorCollection[i].minColor;\n                    nextColor = this.heatMap.colorCollection[i].maxColor;\n                    break;\n                }\n                else if (colorMapping[0].startValue !== this.heatMap.dataSourceMinValue && value < colorMapping[0].startValue) {\n                    nextOffset = colorMapping[0].startValue;\n                    previousOffset = this.heatMap.dataSourceMinValue;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else if (value > offset && value <= (i === (colorMapping.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    colorMapping[i + 1].startValue)) {\n                    nextOffset = (i === (colorMapping.length - 1)) ? this.heatMap.dataSourceMaxValue : colorMapping[i + 1].startValue;\n                    previousOffset = offset;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].value);\n                if (value <= offset) {\n                    nextOffset = offset;\n                    previousColor = this.getEqualColor(colorMapping, previousOffset);\n                    nextColor = this.getEqualColor(colorMapping, nextOffset);\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        var percent = 0;\n        var full = (nextOffset) - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        for (var j = 0; j < this.heatMap.paletteSettings.palette.length; j++) {\n            if (this.heatMap.paletteSettings.palette[j].startValue === null || this.heatMap.paletteSettings.palette[j].endValue === null) {\n                this.heatMap.isColorRange = false;\n                break;\n            }\n            else {\n                this.heatMap.isColorRange = true;\n            }\n        }\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(this.heatMap.isColorRange ? heatMap.paletteSettings.palette :\n            heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n                heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection((Math.round(((minValue) + (index * range)) * 100) / 100), tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        if (!this.heatMap.isColorRange) {\n            this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n        }\n    };\n    /**\n     * To update legend color Collection.\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, this.heatMap.legendColorCollection[0].startValue, this.heatMap.legendColorCollection[0].endValue, this.heatMap.legendColorCollection[0].minColor, this.heatMap.legendColorCollection[0].maxColor, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].startValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].endValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].minColor, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].maxColor, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = this.heatMap.isColorRange ? 'to' : 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // tslint:disable-next-line:no-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.isColorRange ? this.heatMap.colorCollection[0].minColor : this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.isColorRange ? this.heatMap.paletteSettings.palette[y].startValue :\n                        this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                            this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if (this.heatMap.isColorRange) {\n                        var legendRange = void 0;\n                        if ((text <= this.heatMap.colorCollection[y].endValue && text >= this.heatMap.colorCollection[y].startValue)) {\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].minColor;\n                            break;\n                        }\n                        else {\n                            color = this.heatMap.paletteSettings.fillColor.minColor;\n                        }\n                    }\n                    else {\n                        if ((text <= compareValue && singleValue && y === 0) || text < compareValue ||\n                            (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                            var legendRange = void 0;\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.heatMap.paletteSettings.colorGradientMode !== 'Table') {\n                    this.getColorCollection();\n                }\n                if (text < this.heatMap.colorCollection[0].value && !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value &&\n                    !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels, MultipleRow } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue, textTrim } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.multipleRow = [];\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.multilevel = [];\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding;\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] : this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var axisValue = (isVertical ? rect.height : rect.width) / axis.axisLabelSize;\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        var count = 1;\n        var summ = 1;\n        var row = 1;\n        var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n            heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        if (axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim' || axis.enableTrim)) ||\n            axis.labelIntersectAction === 'MultipleRows') {\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            this.clearMultipleRow();\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd) && axis.labelIntersectAction !== 'MultipleRows') {\n                        if (axis.labelIntersectAction === 'Rotate45' && !axis.enableTrim) {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint && axis.labelIntersectAction !== 'MultipleRows')) {\n                        if (axis.labelIntersectAction === 'Rotate45' && !axis.enableTrim) {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n                if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && axis.labelRotation === 0) {\n                    this.multipleRow.push(new MultipleRow(startPoint, endPoint, count, label, row));\n                }\n            }\n            if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && axis.isInversed) {\n                this.multipleRow = this.multipleRow.reverse();\n            }\n        }\n        for (var i = 0; i < labels.length; i++) {\n            var multipleRow = this.multipleRow;\n            var label = void 0;\n            if (axis.enableTrim) {\n                label = textTrim(axis.maxLabelLength, labels[i], axis.textStyle);\n            }\n            else {\n                label = labels[i];\n            }\n            var size = (axis.angle % 180 === 0) ?\n                measureText(label, axis.textStyle) : rotateTextSize(axis.textStyle, labels[i], axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            if (axis.labelIntersectAction === 'MultipleRows' && axis.orientation === 'Horizontal' && i > 0 && axis.labelRotation === 0) {\n                if (multipleRow[i].end >= heatmap.initialClipRect.width && i < labels.length - 1) {\n                    multipleRow[i].row = multipleRow[i].row + 1;\n                }\n                for (var k = 1; k <= axis.multilevel.length; k++) {\n                    if (multipleRow[i].start < multipleRow[i - 1].end) {\n                        if (axis.multilevel[k] < multipleRow[i].start) {\n                            count = k;\n                            break;\n                        }\n                        else if (k === axis.multilevel.length - 1) {\n                            count = axis.multilevel.length;\n                            break;\n                        }\n                    }\n                    else if (size.width < interval) {\n                        for (var j = 1; j <= axis.multilevel.length; j++) {\n                            if (axis.multilevel[j] < multipleRow[i].start) {\n                                count = j;\n                                multipleRow[j].row = count;\n                                break;\n                            }\n                        }\n                    }\n                }\n                labelSize.height = (labelSize.height > ((size.height * count) + (((size.height * 0.5) / 2) * (count - 1)))) ?\n                    labelSize.height : ((size.height * count) + (((size.height * 0.5) / 2) * count));\n                this.multipleRow[i].index = count;\n                axis.multilevel[count] = multipleRow[i].end;\n            }\n            else {\n                if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && i === 0 &&\n                    axis.labelRotation === 0) {\n                    axis.multilevel[1] = multipleRow[i].end;\n                }\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n        }\n        if (heatmap.cellSettings.border.width >= 20 && axis.orientation !== 'Horizontal') {\n            labelSize.width = labelSize.width + (heatmap.cellSettings.border.width / 4);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = labels[i] ? labels[i].toString() : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                this.axisLabels.push(i.toString());\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(labels[i] ? labels[i].toString() : i.toString());\n            this.labelValue.push(labels[i] ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearMultipleRow = function () {\n        this.multipleRow = [];\n        this.multilevel = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Property(35)\n    ], Axis.prototype, \"maxLabelLength\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY } from '../utils/helper';\nimport { extend, Browser } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *  @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            var optionsLine = {};\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var elementSize = measureText(title.text, title.textStyle);\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSourceSettings;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis_1 = axisCollection[i];\n            axis_1.rect = extend({}, rect, null, true);\n            if (axis_1.orientation === 'Horizontal' && !axis_1.opposedPosition) {\n                axis_1.rect.y = rect.y + rect.height;\n                axis_1.rect.height = 0;\n            }\n            if (axis_1.orientation === 'Vertical' && axis_1.opposedPosition) {\n                axis_1.rect.x = rect.x + rect.width;\n                axis_1.rect.width = 0;\n            }\n            axis_1.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis_1.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis_1.multiPosition(axis_1, i_1);\n                axis_1.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var borderWidth = this.heatMap.cellSettings.border.width > 5 ? (this.heatMap.cellSettings.border.width / 2) : 0;\n        var interval = (rect.width - borderWidth) / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var y;\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        if (axis.isInversed && axis.labelIntersectAction === 'MultipleRows') {\n            axis.multipleRow.reverse();\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            label = axis.enableTrim ? textTrim(axis.maxLabelLength, labels[i], axis.textStyle) : label;\n            var elementSize = measureText(label, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ? -(padding) : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) - (elementSize.width / 2) : -((lableRect.width / 2) + (elementSize.width / 2)));\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            if (axis.labelIntersectAction === 'MultipleRows' && axis.labelRotation === 0) {\n                var a = axis.opposedPosition ? -(axis.multipleRow[i].index - 1) : (axis.multipleRow[i].index - 1);\n                if (axis.multipleRow[i].index > 1) {\n                    y = rect.y + labelPadding + (elementSize.height * a) + (axis.opposedPosition ?\n                        -(((elementSize.height * 0.5) / 2) * axis.multipleRow[i].index) :\n                        (((elementSize.height * 0.5) / 2) * axis.multipleRow[i].index));\n                }\n                else {\n                    y = rect.y + labelPadding + (axis.opposedPosition ? -((elementSize.height * 0.5) / 2) :\n                        ((elementSize.height * 0.5) / 2));\n                }\n            }\n            else {\n                y = rect.y + labelPadding;\n            }\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                var rotateSize = rotateTextSize(axis.textStyle, label, angle);\n                var diffHeight = axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                var yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2));\n                y = y + (axis.opposedPosition ? -(rotateSize.height / 2) :\n                    (((angle % 360) === 180 || (angle % 360) === -180) ? 0 : (rotateSize.height) / 2));\n                transform = 'rotate(' + angle + ',' + x + ',' + y + ')';\n            }\n            if (this.heatMap.cellSettings.border.width > 5 && axis.opposedPosition) {\n                y = y - (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (this.heatMap.yAxis.opposedPosition && this.heatMap.cellSettings.border.width > 5) {\n                x = x + (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (this.heatMap.xAxis.isInversed && this.heatMap.cellSettings.border.width > 5) {\n                x = x - (this.heatMap.cellSettings.border.width / 2);\n            }\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, label);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, labelElement, label);\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (label.indexOf('...') !== -1) {\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(x, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        var label;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = labelRect.height / 2; //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var axisWidth = this.heatMap.cellSettings.border.width >= 20 ? (this.heatMap.cellSettings.border.width / 2) : 0;\n            var x = labelRect.x + padding + (axis.opposedPosition ? axisWidth : -axisWidth);\n            var indexValue = this.heatMap.cellSettings.border.width > 5 ?\n                (((this.heatMap.cellSettings.border.width / 2) / len) * (axis.isInversed ? (i) : (len - i))) : 0;\n            var y = (labelRect.y - indexValue) + (axis.isInversed ? position : -position);\n            label = axis.enableTrim ? textTrim(axis.maxLabelLength, labels[i], axis.textStyle) : labels[i];\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, label, 0, 'rotate(' + 0 + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            this.drawSvgCanvas.createText(options, labelElement, label);\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            var elementSize = measureText(label, axis.textStyle);\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n            if (label.indexOf('...') !== -1) {\n                var xValue = axis.opposedPosition ? x : (x - elementSize.width);\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(xValue, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_1 = 3;\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                var endY1 = axis.isInversed ? (lableX + width + padding_1) : (lableX - padding_1);\n                var endY2 = axis.isInversed ? (lableX - padding_1) : (lableX + width + padding_1);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n                var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        axis.orientation === 'Horizontal' ? this.renderXAxisMultiLevelLabels(axis, element, axis.rect) :\n            this.renderYAxisMultiLevelLabels(axis, element, axis.rect);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var width;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                width = categoryLabel.maximumTextWidth ? categoryLabel.maximumTextWidth : labelSize.width;\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding = 3;\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var startY2;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var interval = (axis.rect.height / axis.axisLabelSize) / axis.increment;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY2 = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_2 = 10;\n                path1 = axis.isInversed ? (y - padding_2 - 5) : (y + (labelSize.height) - padding_2);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding_2) : (y - padding_2 - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var oneHour = 60 * 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the CellSettings property in the Heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     * @return {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var themeStyle = heatMap.themeStyle;\n        var tempBorder;\n        var tempRectPosition = [];\n        var circleRadius;\n        tempBorder = cellSetting.border;\n        var borderColor;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            if (heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataYIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataYIndex];\n            }\n            else if (heatMap.paletteSettings.colorGradientMode === 'Row' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataXIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataXIndex];\n            }\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                displayText = this.getFormatedText(this.text, cellSetting.format);\n            }\n            else {\n                displayText = '';\n            }\n            rectPosition.displayText = displayText;\n            if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                displayText = this.cellRendering(rectPosition, displayText);\n            }\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                        this.heatMap.minColorValue = !isFinite(this.heatMap.minColorValue) ?\n                            this.heatMap.dataSourceMinValue : this.heatMap.minColorValue;\n                        this.heatMap.maxColorValue = !isFinite(this.heatMap.maxColorValue) ?\n                            this.heatMap.dataSourceMaxValue : this.heatMap.maxColorValue;\n                    }\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var minValue = void 0;\n            var maxValue = void 0;\n            minValue = (i === 0) && !this.heatMap.isColorRange ? this.heatMap.dataSourceMinValue : this.heatMap.isColorRange ?\n                this.heatMap.toggleValue[i].startValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1 && !this.heatMap.isColorRange) ?\n                    this.heatMap.dataSourceMaxValue : this.heatMap.isColorRange ?\n                    this.heatMap.toggleValue[i].endValue : this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // tslint:disable-next-line:no-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n            else if (this.heatMap.isColorRange &&\n                maxValue >= this.heatMap.toggleValue[i].endValue && i === this.heatMap.toggleValue.length - 1) {\n                isValueInRange = true;\n                break;\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex],\n            cellColor: this.color\n        };\n        this.heatMap.trigger('cellRender', argData);\n        this.color = argData.cellColor;\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        var cellSetting = this.heatMap.cellSettings;\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSourceSettings;\n        // tslint:disable-next-line:no-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? adaptData.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    adaptData.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        var clockWise;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = void 0;\n                        if (this.heatMap.tempRectHoverClass) {\n                            oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        }\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = void 0;\n                    if (this.heatMap.tempRectHoverClass) {\n                        oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    }\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     * @return {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined, select } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font, } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the color property in Heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout && this.heatMap.isRectBoundary) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function (heatMap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    ;\n    /**\n     * To add Tooltip to the rect cell.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        var element = select('#' + this.heatMap.element.id + 'Celltooltipcontainer');\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        this.tooltipObject = new tool({\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight.toLowerCase(),\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle.toLowerCase(),\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            },\n        }, element);\n    };\n    /**\n     * To create div container for tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer',\n            styles: 'position:' + position + '; z-index: 3;top:-' + top + 'px'\n        });\n        this.heatMap.element.appendChild(createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent',\n            styles: 'position:relative'\n        })\n            .appendChild(element2));\n    };\n    /**\n     * To get default tooltip content.\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSourceSettings;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value,\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *  @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // tslint:disable-next-line:no-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // tslint:disable-next-line:no-any \n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        this.heatMap.dataMax = [];\n        this.heatMap.dataMin = [];\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && xLength < yLength) {\n            xLength = yLength;\n        }\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < (this.heatMap.paletteSettings.colorGradientMode === 'Column' ? xLength : yLength); z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                tempVariable = extend([], tempCloneData[cloneDataIndex], null, true);\n                for (var i = 0; i < tempVariable.length; i++) {\n                    if (typeof (tempVariable[i]) === 'object' && (tempVariable[i]) !== null || undefined || '') {\n                        tempVariable[i] = tempVariable[i][0];\n                    }\n                }\n            }\n            else {\n                tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            }\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            if ((this.heatMap.paletteSettings.colorGradientMode === 'Column' ||\n                this.heatMap.paletteSettings.colorGradientMode === 'Row') && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataMax[z] = minMaxVal[1];\n                this.heatMap.dataMin[z] = minMaxVal[0];\n            }\n            minVal = minMaxVal[0];\n            maxVal = minMaxVal[1];\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Row' && !this.heatMap.yAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.xAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // tslint:disable-next-line:no-any \n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 && !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.tempSizeArray = tempVariable;\n            }\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer, textTrim } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font, Title } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Configures the Legend\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.titleFont }, Title)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.segmentCollectionsLabels = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.legendTitleTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    ;\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (heatMap) {\n        /**\n         * destory code\n         */\n    };\n    ;\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var tempBorder = { color: 'transparent', width: 0, };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        var fill;\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value, colorCollection[i].startValue, colorCollection[i].endValue));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx_1 = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx_1.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx_1.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    if (heatMap.legendSettings.title.text) {\n                        ctx_1.clip();\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = (((this.heatMap.isColorRange ? heatMap.legendColorCollection[i].startValue :\n                            heatMap.legendColorCollection[i].value) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateCanvasColorRange(i, grd);\n                        }\n                        else {\n                            grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                        }\n                    }\n                    ctx_1.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var gradientColor1 = void 0;\n                    var cgradientColors = [];\n                    var gradientColor2 = void 0;\n                    var gradientColor3 = void 0;\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateColorRange(i, cgradientColors);\n                        }\n                        else {\n                            var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue)) * 100;\n                            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                            gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                            cgradientColors.push(gradientColor);\n                        }\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderElements(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n                this.renderTitle(rectItemsSvg);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            this.renderTitle(rectItemsSvg);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n        }\n    };\n    Legend.prototype.renderElements = function (rectItemsSvg) {\n        this.renderTitle(rectItemsSvg);\n        this.renderColorAxisGrid(rectItemsSvg);\n    };\n    Legend.prototype.calculateCanvasColorRange = function (i, grd) {\n        var heatMap = this.heatMap;\n        var value = ((((heatMap.legendColorCollection[i].startValue < heatMap.dataSourceMinValue &&\n            heatMap.legendColorCollection[i].endValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : heatMap.legendColorCollection[i].startValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue));\n        value = isNaN(value) ? 0 : value;\n        var value1 = ((heatMap.legendColorCollection[i].endValue >= this.heatMap.dataSourceMaxValue ?\n            this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i].endValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue);\n        if (this.heatMap.legendColorCollection[0].startValue !== this.heatMap.dataSourceMinValue && i === 0 &&\n            this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n            value = (this.heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value / 2, this.heatMap.paletteSettings.fillColor.minColor);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n        grd.addColorStop(value, heatMap.legendColorCollection[i].minColor);\n        grd.addColorStop(value1, heatMap.legendColorCollection[i].maxColor);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue) &&\n            this.heatMap.legendColorCollection[i].endValue < this.heatMap.dataSourceMaxValue) {\n            value = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.minColor);\n            value = ((i === this.heatMap.legendColorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n    };\n    Legend.prototype.calculateColorRange = function (i, cgradientColors) {\n        if (cgradientColors === void 0) { cgradientColors = []; }\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var gradientPercentage;\n        var gradientOptions;\n        var gradientColor;\n        var gradientColor1;\n        var gradientColor2;\n        var gradientColor3;\n        if (this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue && i === 0) {\n            gradientPercentage = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.minColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n            gradientPercentage = (heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.maxColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n        }\n        gradientPercentage = ((heatMap.legendColorCollection[i].startValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue)) * 100;\n        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n        gradientColor = new GradientColor(heatMap.legendColorCollection[i].minColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor);\n        gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue) * 100;\n        gradientColor1 = new GradientColor(heatMap.legendColorCollection[i].maxColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor1);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue)) {\n            gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor2 = new GradientColor(this.heatMap.paletteSettings.fillColor.minColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor2);\n            gradientPercentage = ((i === (this.heatMap.legendColorCollection.length - 1) ?\n                this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor3 = new GradientColor(this.heatMap.paletteSettings.fillColor.maxColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor3);\n        }\n    };\n    Legend.prototype.renderTitle = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.legendSettings.title.text) {\n            var title = heatMap.legendSettings.title;\n            var titleSize = measureText(title.text, title.textStyle);\n            var padding = !heatMap.legendSettings.showLabel ? heatMap.horizontalGradient ? 10 : 6 : this.labelPadding;\n            var y = void 0;\n            var anchor = 'start';\n            var maxWidth = void 0;\n            var dominantBaseline = void 0;\n            var text = title.text;\n            var options = void 0;\n            var yValue = void 0;\n            if (heatMap.legendSettings.title.textStyle.textOverflow === 'Trim') {\n                maxWidth = this.width - 10;\n                text = textTrim(maxWidth, text, title.textStyle);\n            }\n            if (!heatMap.horizontalGradient) {\n                padding = -(padding + titleSize.height / 4);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, rect.y - titleSize.height, maxWidth, titleSize.height)));\n                }\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x, rect.y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            else {\n                y = rect.y + (heatMap.legendSettings.position === 'Top' ? 0 :\n                    -(10 + titleSize.height + padding));\n                padding = heatMap.legendSettings.position === 'Top' ? -(padding + titleSize.height / 4) :\n                    (padding + (3 * titleSize.height / 4));\n                yValue = heatMap.legendSettings.position === 'Bottom' ? y : y - titleSize.height;\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, yValue, maxWidth, titleSize.height)));\n                }\n                titleSize.width = rect.width < titleSize.width ? rect.width : titleSize.width;\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x + (rect.width / 2) - (titleSize.width / 2), y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            this.drawSvgCanvas.createText(options, this.legend, text);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = this.heatMap.isColorRange ?\n                heatMap.legendColorCollection[i].endValue : heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                heatMap.horizontalGradient ? legendRange.width = 0 : legendRange.height = 0;\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : this.legendRange[i].visible ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.colorRangeLegendPosition = function (i, labelX) {\n        if (this.segmentCollections.length !== this.segmentCollectionsLabels.length) {\n            for (var k = 0; k < this.segmentCollections.length; k++) {\n                if (this.segmentCollectionsLabels[i] === this.segmentCollections[k]) {\n                    labelX = this.segmentCollectionsLabels[i] + (((k === this.segmentCollections.length - 1 ?\n                        (this.heatMap.horizontalGradient ? this.width : this.height) :\n                        this.segmentCollections[k + 1]) - this.segmentCollections[k]) / 2);\n                    break;\n                }\n            }\n        }\n        else {\n            labelX = this.segmentCollectionsLabels[i] + (((i === this.segmentCollectionsLabels.length - 1 ?\n                (this.heatMap.horizontalGradient ? this.width : this.height) :\n                this.segmentCollectionsLabels[i + 1]) - this.segmentCollectionsLabels[i]) / 2);\n        }\n        this.labelPosition = labelX;\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = 'start';\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var isColorRange = heatMap.isColorRange;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelX);\n                        labelX = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelX = this.segmentCollections[i] + ((rect.width / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelX = this.segmentCollections[i];\n                    }\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = (((Math.round(value * 100) / 100) === 0 && !isColorRange) || (heatMap.paletteSettings.type === 'Fixed' &&\n                        i === 0)) ? 'start' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient' &&\n                        !isColorRange) || (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                        heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelY);\n                        labelY = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelY = this.segmentCollections[i] + ((rect.height / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelY = this.segmentCollections[i];\n                    }\n                    dominantBaseline = (((Math.round(value * 100) / 100) === 0 && !isColorRange) || (i === 0 &&\n                        heatMap.paletteSettings.type === 'Fixed')) ? 'hanging' : (((Math.round(value * 100) / 100) === 100 &&\n                        !isColorRange && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'auto' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? this.textWrapCollections[i] : this.width - (this.legendRectScale.width +\n                    this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.fillRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        this.labelCollection = [];\n        this.labelCollections = [];\n        var colorCollection = heatMap.legendColorCollection;\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? heatMap.legendSettings.title.text ?\n            titleSize.height + 16 : 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({ format: isCustom ? '' : format });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label : this.heatMap.isColorRange ?\n                    colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender' };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ? colorCollection[i].label :\n                    this.heatMap.isColorRange ? colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() :\n                        formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender', };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                            this.labelCollections.push('');\n                        }\n                        else {\n                            if (!legendEventArg.cancel) {\n                                this.labelCollections.push(legendEventArg.text);\n                            }\n                            else {\n                                this.labelCollections.push('');\n                            }\n                        }\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n            this.calculateTitleBounds();\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateTitleBounds = function () {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.legendSettings.title.text) {\n            if ((heatMap.legendSettings.position === 'Top' || heatMap.legendSettings.position === 'Bottom') &&\n                heatMap.legendSettings.height === '') {\n                this.legendHeight = (((2 * this.legendRectPadding) - titleSize.height) +\n                    this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            if (heatMap.legendSettings.width === '' && (heatMap.legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                if (heatMap.legendSettings.position === 'Right') {\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) +\n                        this.legendSize + this.maxLegendLabelSize.width).toString();\n                }\n                else if (heatMap.legendSettings.position === 'Left') {\n                    titleSize.width = titleSize.width > this.maxLegendLabelSize.width ? titleSize.width : this.maxLegendLabelSize.width;\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) + this.legendSize).toString();\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var height = (titleSize.height + 50).toString();\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length)\n                + this.listInterval + (heatMap.legendSettings.title.text ? titleSize.height : 0);\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.maxLegendLabelSize.width = titleSize.width > this.maxLegendLabelSize.width ?\n                    titleSize.width : this.maxLegendLabelSize.width;\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = height;\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var width;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        if (!heatMap.legendSettings.title.text) {\n            width = stringToNumber(this.legendWidth, rect.width);\n        }\n        else {\n            width = this.width;\n        }\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                maxHeight = heatMap.legendSettings.title.text ? maxHeight - titleSize.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var titleHeight = heatMap.legendSettings.title.text ? titleSize.height : 0;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding + titleHeight;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval :\n                scale.height - 2 * padding - titleHeight;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollectionsLabels = [];\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = this.heatMap.isColorRange ? (colorCollection[0].startValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : colorCollection[0].startValue : ((colorCollection[0].value > minValue) ? minValue :\n            colorCollection[0].value);\n        this.legendMaxValue = this.heatMap.isColorRange ? (colorCollection[colorCollection.length - 1].endValue <\n            heatMap.dataSourceMaxValue) ? heatMap.dataSourceMaxValue : colorCollection[colorCollection.length - 1].endValue :\n            (colorCollection[colorCollection.length - 1].value < maxValue ? maxValue : colorCollection[colorCollection.length - 1].value);\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = void 0;\n                legendPart = (this.heatMap.isColorRange && heatMap.horizontalGradient ? rect.width : rect.height) / 100;\n                if (this.heatMap.isColorRange) {\n                    if (colorCollection[0].startValue !== this.heatMap.dataSourceMinValue && index === 0 &&\n                        colorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n                        value = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    value = ((((colorCollection[index].startValue < heatMap.dataSourceMinValue && colorCollection[index].endValue >\n                        heatMap.dataSourceMaxValue) ? heatMap.dataSourceMinValue : colorCollection[index].startValue) -\n                        this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                    this.segmentCollectionsLabels.push(pathY1);\n                    if (colorCollection[index].endValue !== ((index === colorCollection.length - 1) ?\n                        this.heatMap.dataSourceMaxValue : colorCollection[index + 1].startValue) &&\n                        this.heatMap.legendColorCollection[index].endValue < this.heatMap.dataSourceMaxValue) {\n                        if (index === colorCollection.length - 1) {\n                            value = (colorCollection[index].endValue - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue) * 100;\n                            pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                            this.segmentCollections.push(pathY1);\n                        }\n                        value = ((index === colorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                            colorCollection[index].endValue) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                }\n                else {\n                    value = ((colorCollection[index].value - this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    if (!heatMap.horizontalGradient) {\n                        legendPart = rect.height / 100;\n                        pathY1 = legendRect.y + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    else {\n                        legendPart = rect.width / 100;\n                        pathX1 = legendRect.x + (legendPart * value);\n                        this.segmentCollections.push(pathX1);\n                    }\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            var segmentWidth = this.heatMap.isColorRange ? this.segmentCollectionsLabels : this.segmentCollections;\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (segmentWidth[i] - segmentWidth[i - 1]) / 2;\n                    var nextSegmentWidth = (segmentWidth[i + 1] - segmentWidth[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = this.heatMap.isColorRange ? (legendRect.width - segmentWidth[i - 1]) / 2 : previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = (previousSegmentWidth < nextSegmentWidth && !this.heatMap.isColorRange) ?\n                            previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < (heatMap.isColorRange ? this.segmentCollections.length : heatMap.legendColorCollection.length); i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendTitleTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_legendTitle') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            showTooltip(this.heatMap.legendSettings.title.text, pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_legendTitle_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n            document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip').style.visibility = 'visible';\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0,\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = heatMap.legendSettings.title.text ? this.width - (2 * (this.legendSize + this.labelPadding)) :\n            this.legendGroup.width - (this.legendSize + this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender',\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                    heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                        heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                heatMap.horizontalGradient ? legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval :\n                    legendY += this.legendSize + this.listInterval;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function (heatMap) {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer',\n            styles: 'position:absolute'\n        });\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (position && pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendPadding = heatMap.horizontalGradient ? 10 : 0;\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx_2 = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding +\n                    this.maxLegendLabelSize.width) + padding, legendBound.height + 2 * (padding + legendPadding));\n            }\n            else {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] = legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            if (heatMap.renderingMode === 'SVG') {\n                this.renderTitle(rectItemsSvg);\n            }\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        if (heatMap.enableCanvasRendering) {\n            ctx.restore();\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the Adaptor Property in the Heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('None')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (dataSource, dataSourceSettings) {\n        if (dataSourceSettings.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(dataSource, dataSourceSettings, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (dataSourceSettings.adaptorType === 'None') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(dataSource, dataSourceSettings);\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(dataSource, dataSourceSettings);\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(dataSource);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        var intervalType;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (dataSource, adapData, xAxis, yAxis) {\n        var data = dataSource;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // tslint:disable-next-line:no-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // tslint:disable-next-line:no-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (dataSource) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        this.reconstructData = [];\n        if (tempDataCollection && tempDataCollection.length) {\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] = isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                            '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(dataSource, adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     * @return {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     * @return {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // tslint:disable-next-line:no-any \n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                labels.map(Number).indexOf(+this.tempSplitDataCollection[tempSplitData[splitIndex]])) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function (heatMap) {\n        /**\n         * No Lines\n         */\n    };\n    ;\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n","import { createElement, isNullOrUndefined, Browser, print as printWindow } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement } from '../utils/helper';\nimport { SizeF } from '@syncfusion/ej2-pdf-export';\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Heatmap\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     * @private\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var controlValue = this.getControlsValue();\n        var width = controlValue.width;\n        var height = controlValue.height;\n        var element = this.control.svgObject;\n        var isCanvas = this.control.enableCanvasRendering;\n        var image;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': width.toString(),\n                    'height': height.toString()\n                }\n            });\n        }\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            controlValue.svg.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            if (Browser.info.name === 'msie') {\n                var svg = new Blob([(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'application/octet-stream' });\n                window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n            }\n            else {\n                this.triggerDownload(fileName, type, url, isDownload);\n            }\n        }\n        else if (Browser.info.name === 'msie') {\n            var canvas = element;\n            if (!isCanvas) {\n                canvas = this.createCanvas();\n            }\n            image = canvas.toDataURL(type);\n            if (type === 'PDF') {\n                this.exportPdf(canvas, orientation, width, height, isDownload, fileName);\n            }\n            else {\n                this.doExport(type, image, fileName);\n            }\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    _this.exportPdf(element, orientation, width, height, isDownload, fileName);\n                }\n                else {\n                    if (window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n                    }\n                    else {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                }\n            });\n            image_1.src = url;\n        }\n        if (!isCanvas) {\n            var id = document.getElementById(this.control.element.id);\n            removeElement(id + '_canvas');\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     * @private\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    /**\n     * To get the maximum size value\n     * @param controls\n     * @param name\n     */\n    ExportUtils.prototype.getControlsValue = function () {\n        var width = 0;\n        var height = 0;\n        var isCanvas = this.control.enableCanvasRendering;\n        var svgObject = new SvgRenderer('').createSvg({\n            id: 'Svg_Export_Element',\n            width: 200, height: 200\n        });\n        var svg = this.control.svgObject.cloneNode(true);\n        var groupEle = this.control.renderer.createGroup({\n            style: 'transform: translateY(' + height + 'px)'\n        });\n        if (!isCanvas) {\n            groupEle.appendChild(svg);\n        }\n        width = Math.max(this.control.availableSize.width, width);\n        height = height + this.control.availableSize.height;\n        if (!isCanvas) {\n            svgObject.appendChild(groupEle);\n        }\n        if (!isCanvas) {\n            svgObject.setAttribute('width', width + '');\n            svgObject.setAttribute('height', height + '');\n        }\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgObject\n        };\n    };\n    ExportUtils.prototype.createCanvas = function () {\n        var heatmap = this.control;\n        var renderMode = heatmap.renderingMode;\n        heatmap.renderingMode = 'Canvas';\n        heatmap.refresh();\n        var canvas = heatmap.svgObject;\n        heatmap.renderingMode = renderMode;\n        heatmap.refresh();\n        return canvas;\n    };\n    ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName) {\n        var document = new PdfDocument();\n        var margin = document.pageSettings.margins;\n        var pdfDefaultWidth = document.pageSettings.width;\n        var pdfDefaultHeight = document.pageSettings.height;\n        var exactWidth;\n        var exactHeight;\n        var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n        document.pageSettings.orientation = orientation;\n        exactWidth = (pdfDefaultWidth < width) ? (width + margin.left + margin.right) : pdfDefaultWidth;\n        exactHeight = (pdfDefaultHeight < height) ? (height + margin.top + margin.bottom) : pdfDefaultHeight;\n        document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n        imageString = imageString.slice(imageString.indexOf(',') + 1);\n        document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width, height);\n        if (isDownload) {\n            document.save(fileName + '.pdf');\n            document.destroy();\n        }\n    };\n    ExportUtils.prototype.doExport = function (type, image, fileName) {\n        var images = [];\n        var fileType = type || 'JPG';\n        images = [image];\n        this.exportImage(images, fileName, fileType, image);\n    };\n    ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        for (var j = 0; j < buffers.length; j++) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n            }\n        }\n    };\n    /**\n     * To print the heatmap elements.\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.print = function () {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        if (this.control.renderingMode === 'SVG') {\n            printWindow(this.getHTMLContent(), this.printWindow);\n        }\n        else {\n            var element = this.control.svgObject;\n            var dataUrl = element.toDataURL();\n            var image_2 = new Image();\n            var ctx_2 = element.getContext('2d');\n            image_2.onload = (function () {\n                ctx_2.drawImage(image_2, 0, 0);\n            });\n            image_2.src = dataUrl;\n            printWindow(image_2, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the heatmap.\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function () {\n        var div = createElement('div');\n        div.appendChild(this.control.element.cloneNode(true));\n        return div;\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nimport { Data } from './datasource/adaptor';\nimport { ExportUtils } from '../heatmap/utils/export';\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * The width of the heatmap as a string accepts input as both like '100px' or '100%'.\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isColorRange = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.horizontalGradient = _this.legendSettings.position === 'Bottom' || _this.legendSettings.position === 'Top';\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        /** @private */\n        _this.isBlazor = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Handles the export method for heatmap control.\n     * @param type\n     * @param fileName\n     * @param orientation\n     */\n    HeatMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n        this.isBlazor = isBlazor();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: (this.isBlazor ? null : this) });\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.renderComplete();\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource, this.dataSourceSettings);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv(this);\n            }\n        }\n    };\n    /**\n     * Get component name\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var isUpdateSelection = true;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !== (oldProp.cellSettings\n                        !== undefined && oldProp.cellSettings.tileType))\n                        || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    if (this.cellSettings.tileType === 'Bubble') {\n                        isUpdateSelection = false;\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                case 'dataSourceSettings':\n                    this.isCellData = false;\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !==\n                        (oldProp.legendSettings !== undefined && oldProp.legendSettings.visible)) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.paletteCellSelectionUpdation();\n                    this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            if (!isUpdateSelection) {\n                this.clearSelection();\n            }\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            if (isUpdateSelection) {\n                this.updateCellSelection();\n            }\n            else {\n                this.clearSelection();\n            }\n        }\n        this.rendering = true;\n    };\n    HeatMap.prototype.paletteCellSelectionUpdation = function () {\n        this.updateBubbleHelperProperty();\n        if (this.legendVisibilityByCellType) {\n            this.legendOnLoad = true;\n            this.legendModule.updateLegendRangeCollections();\n        }\n    };\n    /**\n     * create svg or canvas element\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container',\n            styles: 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px',\n        });\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return{ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To destroy the widget\n     * {% codeBlock src='heatmap/destroy/index.md' %}{% endcodeBlock %}\n     * @method destroy\n     * @return {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     * @method destroy\n     * @return {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n        var alignElement = this.element;\n        while (alignElement.parentNode) {\n            if (alignElement.tagName === 'BODY') {\n                break;\n            }\n            var align = alignElement.align;\n            if (align === 'center') {\n                var containerWidth = this.availableSize.width.toString();\n                this.element.style.width = containerWidth + 'px';\n                this.element.style.margin = '0 auto';\n                break;\n            }\n            alignElement = alignElement.parentElement;\n        }\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        var borderBoundary = 5;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        if (this.cellSettings.border.width > borderBoundary && (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) && this.cellSettings.tileType === 'Rect') {\n            var currentRect = this.heatMapSeries.getCurrentRect(x, y);\n            var rectHeight = lastRectDetails[0].height;\n            var rectWidth = lastRectDetails[0].width;\n            var cellBorder = this.cellSettings.border.width / 2;\n            if ((x >= (currentRect.x + cellBorder) && (y >= (currentRect.y + cellBorder)) &&\n                (x <= (currentRect.x + (rectWidth - cellBorder)) &&\n                    (y <= (currentRect.y + (rectHeight - cellBorder)))))) {\n                isRect = true;\n                this.isRectBoundary = true;\n            }\n            else {\n                isRect = false;\n                this.isRectBoundary = false;\n            }\n        }\n        else {\n            isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n                x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n                y <= (lastRectDetails[0].y + lastRectDetails[0].height));\n            this.isRectBoundary = isRect;\n        }\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if ((this.paletteSettings.colorGradientMode === 'Column' || this.paletteSettings.colorGradientMode === 'Row') &&\n            this.paletteSettings.type === 'Gradient') {\n            if (this.paletteSettings.palette.length === 0) {\n                this.legendVisibilityByCellType = false;\n            }\n            else {\n                for (var i = 0; i < this.paletteSettings.palette.length; i++) {\n                    if (this.paletteSettings.palette[i].value !== null || '') {\n                        this.legendVisibilityByCellType = true;\n                    }\n                    else if (this.paletteSettings.palette[i].value === null || '') {\n                        this.legendVisibilityByCellType = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize.bind(this));\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        var touchObj = new Touch(this.element, {\n            tapHold: function () {\n                heatmap.isCellTapHold = true;\n                heatmap.getDataCollection();\n                heatmap.currentRect.allowCollection = false;\n                heatmap.setCellOpacity();\n                var argData = {\n                    heatmap: (_this.isBlazor ? null : heatmap),\n                    cancel: false,\n                    name: 'cellSelected',\n                    data: heatmap.multiCellCollection\n                };\n                heatmap.trigger('cellSelected', argData);\n            },\n            tap: function () {\n                var isCellTap = false;\n                if (!heatmap.isCellTapHold) {\n                    isCellTap = true;\n                }\n                heatmap.tooltipOnMouseMove(null, heatmap.currentRect, isCellTap);\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Method to print the heatmap.\n     */\n    HeatMap.prototype.print = function () {\n        var exportChart = new ExportUtils(this);\n        exportChart.print();\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, move, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize);\n    };\n    /**\n     * Handles the heatmap resize.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: (this.isBlazor ? null : this),\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', (_this.isBlazor ? null : { heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = false;\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger('cellClick', {\n                heatmap: (this.isBlazor ? null : this),\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id),\n                event: e\n            });\n        }\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        this.mouseAction(e, pageX, pageY, touchArg, elementRect);\n        return true;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     */\n    HeatMap.prototype.mouseAction = function (e, pageX, pageY, touchArg, elementRect) {\n        var tooltipText;\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n                if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendTitleTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && (getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY)\n                        || getTooltipText(this.legendModule.legendTitleTooltip, pageX, pageY)));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        if (this.tooltipTimer) {\n                            window.clearTimeout(this.tooltipTimer);\n                        }\n                        this.tooltipTimer = setTimeout(function () {\n                            _this.tooltipModule.tooltipObject.fadeOut();\n                            _this.tooltipModule.isFadeout = true;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                var borderBoundary = 5;\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering &&\n                        this.cellSettings.border.width < borderBoundary) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n                else if (!this.showTooltip && this.cellSettings.border.width > borderBoundary) {\n                    this.heatMapSeries.highlightSvgRect(e.target.id);\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart') {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        if (e.ctrlKey === false && e.type !== 'touchstart' && e.type !== 'touchmove') {\n            this.removeSelectedCellsBorder();\n        }\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height,\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n        parent.appendChild(this.renderer.drawRectangle(rectItems));\n        document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function () {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                    containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n        this.multiCellCollection = [];\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * To clear the multi cell selection\n     * {% codeBlock src='heatmap/clearSelection/index.md' %}{% endcodeBlock %}\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        this.getDataCollection();\n                        this.currentRect.allowCollection = false;\n                        this.setCellOpacity();\n                        var argData = {\n                            heatmap: (this.isBlazor ? null : this),\n                            cancel: false,\n                            name: 'cellSelected',\n                            data: this.multiCellCollection\n                        };\n                        this.trigger('cellSelected', argData);\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n            else if (e.type === 'mouseleave' && (this.element.id + '_selectedCells')) {\n                removeElement(this.element.id + '_selectedCells');\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            if (!this.enableCanvasRendering) {\n                removeElement(this.element.id + '_Title_Tooltip');\n            }\n            else {\n                removeElement(this.element.id + '_canvas_Tooltip');\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n            if (this.rectSelected && this.paletteSettings.type === 'Gradient') {\n                this.legendModule.removeGradientPointer();\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     * @return {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas',\n                styles: 'position:relative'\n            });\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0,\n                style: 'position: absolute; z-index: 1'\n            });\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({}, Data)\n    ], HeatMap.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","innerText","style","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","sum","values","_i","values_1","length","titlePositionY","heatmapSize","topPadding","bottomPadding","height","rotateTextSize","angle","box","options","renderer","SvgRenderer","svgObject","createSvg","font-size","font-style","toLowerCase","font-family","font-weight","transform","text-anchor","createText","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","currentLabel","maximumWidth","textCollection","split","label","labelCollection","i","len","concat","maxWidth","index","substring","showTooltip","x","y","areaWidth","element","isTouch","heatmap","tooltip","initialClipRect","toString","styles","titleSettings","availableSize","setTimeout","removeElement","getElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","color","window","getComputedStyle","isRGBValue","exec","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","formatValue","isCustom","format","tempInterval","formatFun","replace","Theme","heatMapTitleFont","titleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","FillColor","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","startValue","endValue","minColor","maxColor","BubbleTooltipData","mappingName","bubbleData","valueType","LegendColorCollection","isHidden","MultipleRow","start","end","row","PaletteSettings","g","CellColor","heatMap","convertToRGB","colorMapping","previousColor","nextColor","previousOffset","isColorRange","nextOffset","paletteSettings","offset","Number","colorCollection","dataSourceMinValue","fillColor","dataSourceMaxValue","getEqualColor","percent","isNaN","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","legendColorCollection","range","j","palette","minValue","bubbleSizeWithColor","minColorValue","maxValue","maxColorValue","emptyPointColor","themeStyle","emptyCellColor","tempcolorMapping","orderbyOffset","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","isNullOrUndefined","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","toggledColor","colorGradientMode","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","call","stroke","parseFloat","CurrentRect","xIndex","yIndex","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","xLabel","yLabel","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","dy","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","tspanElement","renderOptions","dominant-baseline","createTSpan","drawLine","translateX","translateY","ctx","getOptionValue","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","multipleRow","nearSizes","farSizes","maxLabelSize","titleSize","multilevel","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","labels","count","showLabelOn","labelIntersectAction","enableTrim","startX","previousEnd","previousStart","clearMultipleRow","elementSize","axisInterval","startPoint","endPoint","reverse","maxLabelLength","k","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","axisTitle","calculateVisibleLabels","axisCollection","data","dataSourceSettings","processLabels","isJsonData","adaptorType","measureAxis","calculateAxisSize","axis_1","i_1","compactInterval","tempintervel","labelPadding","lableStrtX","labelElement","borderElement","lableRect","drawXAxisBorder","rotateSize","diffHeight","yAxis","xAxis","axisLabel","labelInterval","lableStartY","labelRect","axisWidth","indexValue","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","labelIndex","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempBorder","circleRadius","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","rectPositionCollection","bubbleColorValue","getBubbleRadius","dataMin","dataMax","setTextAndColor","rectPosition","updateRectDetails","showLabel","getFormatedText","cellRender","cellRendering","renderingMode","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","isFinite","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","xLabels","yLabels","slice","yLabelValue","argData","isBlazor","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubbleDataMapping","cellBorder","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","isRectBoundary","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","select","tool","enableAnimation","location","theme","content","tooltipSettings","template","areaBounds","createTooltipDiv","allowSelection","element2","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","dataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","labelLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","segmentCollectionsLabels","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","legendTitleTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","clip","grd","ctx_1","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","calculateCanvasColorRange","addColorStop","gradientOptions","gradientColor","cgradientColors","calculateColorRange","gradientPercentage","linearGradient","drawGradient","rectItem","renderElements","renderSmartLegend","renderTitle","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","renderColorAxisGrid","gradientColor1","gradientColor2","gradientColor3","heatMapTitle","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","colorRangeLegendPosition","labelX","labelPosition","dominantBaseline","legendLabel","textWrapWidth","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","e","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","keys","background","calculateLegendBounds","legendEventArg","legendRender","calculateTitleBounds","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","titleHeight","calculateColorAxisGrid","legendPart","maxTextWrapLength","segmentWidth","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendTitleTooltip","textContent","offsetWidth","renderLegendLabelTooltip","targetId","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","clearRect","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","legendPadding","ctx_2","clearSelection","updateLegendRangeCollections","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","constructDatasource","completeAdaptDataSource","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","adaptordata","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","yDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex","ExportUtils","control","export","fileName","image","controlValue","getControlsValue","isCanvas","attrs","isDownload","userAgent","PdfPageOrientation","Landscape","svgData","svg","outerHTML","url","URL","createObjectURL","Blob","XMLSerializer","serializeToString","info","navigator","msSaveOrOpenBlob","toLocaleLowerCase","triggerDownload","createCanvas","toDataURL","exportPdf","doExport","image_1","Image","onload","drawImage","revokeObjectURL","msToBlob","src","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","cloneNode","groupEle","renderMode","refresh","exactWidth","exactHeight","PdfDocument","pageSettings","margins","pdfDefaultWidth","pdfDefaultHeight","imageString","SizeF","pages","add","graphics","PdfBitmap","images","fileType","exportImage","buffers","HTMLElement","image1","byteString","atob","buffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","print","printWindow","open","outerHeight","outerWidth","resizeTo","screen","availWidth","availHeight","getHTMLContent","dataUrl","image_2","div","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","initAxis","processInitData","setTheme","calculateMaxLength","calculateBounds","appendSvgObject","tooltipModule","renderComplete","reRenderDatasource","setRenderMode","renderSecondaryElement","renderBorder","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","isUpdateSelection","_a","paletteCellSelectionUpdation","refreshBound","updateCellSelection","removeSvg","calculateSize","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","innerHTML","classList","offsetHeight","alignElement","parentNode","tagName","align","containerWidth","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","isRect","lastRectDetails","cellTextColor","getThemeColor","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseMove","heatMapMouseLeave","addEventListener","heatMapResize","bind","Touch","tapHold","getDataCollection","setCellOpacity","tap","isCellTap","tooltipOnMouseMove","setStyle","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","clearTimeout","isDestroyed","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","getAttribute","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","touchArg","elementRect","changedTouches","clientY","clientX","notify","loop","toggleVisibility","mouseAction","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","tooltipTimer","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","ctrlKey","removeSelectedCellsBorder","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","rectElement","splice","className","cursor","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component"],"mappings":"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"}