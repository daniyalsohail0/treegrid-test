{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () { _this.updateSplitterSize(true); }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (this.paneSettings[i].min !== null) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // tslint:disable-next-line:no-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // tslint:disable-next-line:no-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // tslint:disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // tslint:disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                    this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n            this.renderReactTemplates();\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                    this.renderReactTemplates();\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","onReportWindowSize","reportWindowSize","bind","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","updateSplitterSize","removeEventListener","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","minValue","paneMinRange","updatePane","flexPane","convertPixelToNumber","toString","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","window","scrollY","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"mappings":"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"}