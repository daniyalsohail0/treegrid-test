{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () { _this.updateSplitterSize(true); }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (this.paneSettings[i].min !== null) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // tslint:disable-next-line:no-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // tslint:disable-next-line:no-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // tslint:disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // tslint:disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                    this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n            this.renderReactTemplates();\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                    this.renderReactTemplates();\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","onReportWindowSize","reportWindowSize","bind","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","minValue","paneMinRange","updatePane","flexPane","convertPixelToNumber","toString","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","window","scrollY","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","this_4","localPanel","pan"],"mappings":"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"}